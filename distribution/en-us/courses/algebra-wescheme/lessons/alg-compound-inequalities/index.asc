[.LessonPlan]
[.wescheme]
= Compound Inequalities

%CURRICULUMspan% class="other-proglang"%BEGINCURRICULUMspan%link:{pathwayrootdir}../algebra-pyret/lessons/alg-compound-inequalities/index.shtml[(Also available for Pyret)]%ENDCURRICULUMspan%


Students learn to compose inequalities using the concepts of union and intersection, and solve problems using compound inequalities. Finally, they apply what they've learned to set screen boundaries in their game.


[.left-header.preamble,cols="20a,80a",stripes=none]
|===

| Prerequisites | link:{pathwayrootdir}lessons/pass:[alg-simple-inequalities]/index.shtml[Simple Inequalities]

| 
++++
<script>
function showStandardsAlignment() {
  const selectTag = document.getElementsByClassName('standardsAlignmentSelect')[0];
  const options = selectTag && selectTag.options;
  const stdTables = document.getElementsByClassName('alignedStandards');
  const intro = document.getElementsByClassName('alignedStandardsIntro')[0];
  let introNeeded = true;
  for (let i = 0; i < stdTables.length; i++) {
    const stdTable = stdTables[i];
    stdTable.style.display = 'none';
  }
  for (let i = 0; i < options.length; i++) {
    const opt = options[i];
    if (opt.selected) {
      const optStd = opt.value;
      for (let j = 0; j < stdTables.length; j++) {
        const stdTable = stdTables[j];
        if (stdTable.classList.contains(optStd)) {
          stdTable.style.display = 'block';
          introNeeded = false;
        }
      }
    }
  }
  intro.style.display = introNeeded ? 'block' : 'none';
}
</script>
++++

Relevant Standards%CURRICULUMselect% class="standardsAlignmentSelect"  multiple onchange="showStandardsAlignment()" style="height: 150px"%BEGINCURRICULUMselect%%CURRICULUMoption% value="standards-OK"%BEGINCURRICULUMoption%OK%ENDCURRICULUMoption%%CURRICULUMoption% value="standards-CC-Math"%BEGINCURRICULUMoption%CC-Math%ENDCURRICULUMoption%%ENDCURRICULUMselect%

|

include::./pathway-standards.asc[]


| Lesson Goals
| Students will be able to:

* Describe how functions can work together.
* Describe the solution set of a compound inequality
* Make mathematical adjustments relevant to their game.

| Student-Facing Lesson Goals
|
* I can use two or more inequalities together and describe the area they enclose.
* I can tell someone else how two or more %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%function%ENDCURRICULUMspan%s work together.
* I can make adjustments to a program based on how the program behaves.

| Materials
|

* Lesson slides template (link:pass:[https://docs.google.com/presentation/d/1y9X1iLjGKrpu2SNYjbL_oJWrMycvwwaZQB-PsIQW3rw/][Google Slides, window="_blank"])

* Inequalities Explore worksheet (link:{pathwayrootdir}pass:[lessons/alg-compound-inequalities/pages/and-or.html][original (Page 45), window="_blank"], link:pass:[solution-pages/and-or.html][solutions, window="_blank"])
* Design Recipe: onscreen? (link:{pathwayrootdir}pass:[lessons/alg-compound-inequalities/pages/onscreen.html][original (Page 46), window="_blank"], link:pass:[solution-pages/onscreen.html][solution, window="_blank"])

Bootstrap Formative Assessments

* Booleans Review (link:pass:[https://quizizz.com/admin/quiz/5d9919516dbee7001e08a4a0][Quizizz, window="_blank"], link:pass:[https://teacher.desmos.com/activitybuilder/custom/5d991ac49b9b292020c18108][Desmos Activity, window="_blank"])

| Preparation
|
* Make sure all materials have been gathered
* Decide how students will be grouped in pairs

| Supplemental Resources
|
- Desmos Inequalities Bundle (link:pass:[https://teacher.desmos.com/inequalities][Desmos Activities, window="_blank"])
- Inequalities & Graphing Inequalities (link:pass:[https://quizizz.com/admin/quiz/56cf6ac2bb56dfc267b35f94/inequalities-and-graphing-inequali][Quizizz, window="_blank"])
- Inequality Graph Illustrator (link:pass:[https://www.geogebra.org/m/Huq24Spq][Geogebra, window="_blank"])
- Graphing Compound Inequalities (link:pass:[https://quizizz.com/admin/quiz/5846cda05c74a6041c47566b/graphing-compound-inequalities][Quizizz, window="_blank"])

| Key Points for the Facilitator
|

* Role-playing can help students understand the job of `onscreen`?, and how it relates to `safe-left?` and `safe-right?`.

* If a student's `TARGET` and `DANGER` image seem to be "getting stuck" on the edge of the screen, the student may have to adjust the side boundaries depending on the size of their images.
* The code for the boundary functions in the game is _exactly the same_ as in Sam the Butterfly.
|===

[.old-materials]
For a textbook-like version of materials similar to these, you may wish to see the link:pass:[https://www.bootstrapworld.org/materials/spring2020/courses/algebra/en-us/units/unit6/index.html][prior unit-based version, window="_blank"]



include::./pathway-glossary.asc[]

[.lesson-section-1]
== Warmup

Students should have their computer, contracts page, and pencil and be logged in to
 link:pass:[https://www.wescheme.org][WeScheme, window="_blank"] 
with their Game Project file open.

[.lesson-section-1]
== Compound Inequalities %CURRICULUMspan% class="duration"%BEGINCURRICULUMspan%10 minutes%ENDCURRICULUMspan%

[.lesson-section-2]
=== Overview
Students consider the need to _compose_ inequalities, and think about how to write them.

[.lesson-section-2]
=== Launch
We use inequalities for lots of things:

- Is it hot out? (%CURRICULUMspan% class="gdrive-only"%BEGINCURRICULUMspan%temperature > 80째%ENDCURRICULUMspan%%CURRICULUMspan% class="begin-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%%CURRICULUMSCRIPT%%BEGINCURRICULUMSCRIPT%\displaystyle temperature \gt 80째%ENDCURRICULUMSCRIPT%%CURRICULUMspan% class="end-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%)
- Did I get paid enough for painting that fence? (%CURRICULUMspan% class="gdrive-only"%BEGINCURRICULUMspan%temperature < $100%ENDCURRICULUMspan%%CURRICULUMspan% class="begin-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%%CURRICULUMSCRIPT%%BEGINCURRICULUMSCRIPT%\displaystyle temperature \lt $100%ENDCURRICULUMSCRIPT%%CURRICULUMspan% class="end-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%)
- Are the cookies finished baking? (%CURRICULUMspan% class="gdrive-only"%BEGINCURRICULUMspan%timer = 0%ENDCURRICULUMspan%%CURRICULUMspan% class="begin-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%%CURRICULUMSCRIPT%%BEGINCURRICULUMSCRIPT%\displaystyle timer = 0%ENDCURRICULUMSCRIPT%%CURRICULUMspan% class="end-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%)

Have students come up with other examples.

But many times we need to _combine_ inequalities:

- Should I go to the beach? (%CURRICULUMspan% class="gdrive-only"%BEGINCURRICULUMspan%temperature > 80째%ENDCURRICULUMspan%%CURRICULUMspan% class="begin-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%%CURRICULUMSCRIPT%%BEGINCURRICULUMSCRIPT%\displaystyle temperature \gt 80째%ENDCURRICULUMSCRIPT%%CURRICULUMspan% class="end-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan% and %CURRICULUMspan% class="gdrive-only"%BEGINCURRICULUMspan%weather = "sunny"%ENDCURRICULUMspan%%CURRICULUMspan% class="begin-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%%CURRICULUMSCRIPT%%BEGINCURRICULUMSCRIPT%\displaystyle weather = "sunny"%ENDCURRICULUMSCRIPT%%CURRICULUMspan% class="end-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%)
- Was this burrito worth the price? (%CURRICULUMspan% class="gdrive-only"%BEGINCURRICULUMspan%taste = "delicious"%ENDCURRICULUMspan%%CURRICULUMspan% class="begin-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%%CURRICULUMSCRIPT%%BEGINCURRICULUMSCRIPT%\displaystyle taste = "delicious"%ENDCURRICULUMSCRIPT%%CURRICULUMspan% class="end-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan% and %CURRICULUMspan% class="gdrive-only"%BEGINCURRICULUMspan%price &le; $20%ENDCURRICULUMspan%%CURRICULUMspan% class="begin-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%%CURRICULUMSCRIPT%%BEGINCURRICULUMSCRIPT%\displaystyle price \leq $20%ENDCURRICULUMSCRIPT%%CURRICULUMspan% class="end-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%)

Have students come up with other examples.

Guide students through other examples of `and` and `or` with various statements, such as "I'm wearing a red shirt AND I'm a math teacher, true or false?" or "I'm an NBA basketball star OR I'm having pizza for lunch, true or false?". This can make for a good sit-down, stand-up activity, where students take turns saying compound boolean statements and everyone stands if that statement is true for them.

[.lesson-section-2]
=== Investigate
Both mathematics and programming have ways of combining - or _composing_ - inequalities.

Have students complete link:{pathwayrootdir}pass:[lessons/alg-compound-inequalities/pages/and-or.html][Inequalities -- Practice (Page 45), window="_blank"].

[.lesson-section-2]
=== Synthesize
- Be really careful to check for understanding here. __Expresions using `and` only produce `true` if both of their sub-expressions are `true`. Expresions using `or` produce `true` if *either* of their sub-expressions are `true`.__

[.strategy-box, cols="1", grid="none", stripes="none"]
|===
|
%CURRICULUMspan% class="title"%BEGINCURRICULUMspan%Strategies for English Language Learners%ENDCURRICULUMspan%

When describing compound inequalities, be careful not to use "english shortcuts". For example, we might say "I am holding a marker _and_ an eraser" instead of "I am holding a marker _and_ I am holding an eraser." These sentences mean the same thing, but the first one obscures the fact that "and" joins two complete phrases. For ELL/ESL students, this is unecessarily adds to cognitive load!
|===


[.lesson-section-1]
== Protecting Sam on Both Sides %CURRICULUMspan% class="duration"%BEGINCURRICULUMspan%30 minutes%ENDCURRICULUMspan%

[.lesson-section-2]
=== Overview
Students solve a word problem involving compound inequalities, using `and` to compose the simpler boundary-checking functions from the previous lesson.

[.lesson-section-2]
=== Launch

*Note:* In this programming language, question marks are prounced "huh?". So `safe-left?` would be prounounced "safe left huh?" This can be a source of some amusement for students!


- Recruit three student volunteers to roleplay the functions `safe-left?`, `safe-right?` and `onscreen?`. Give them 1 minute to read the contract and code, as written in the program.

- As in the previous lesson, ask the volunteers what their name, Domain and Range are, and then test them out by calling out their name, followed by a number. (For example, "(safe-left? 20)!", "(safe-right? -100)!", "(onscreen? 829)!") *Note"* the code for `onscreen` _calls the safe-left function!_. So the student roleplaying `onscreen` should turn to `safe-left` and give the input to them.

For example:


- *Facilitator*: "onscreen-huh 70"
- *onscreen?* (turns to safe-left?): "safe-left-huh 70"
- *safe-left?*: "true"
- *onscreen?* (turns back to facilitator): "true" +
{empty} +

- *Facilitator*: "onscreen-huh -100"
- *onscreen?* (turns to safe-left?): "safe-left-huh -100"
- *safe-left?*: "false"
- *onscreen?* (turns back to facilitator): "false" +
{empty} +

- *Facilitator*: "onscreen-huh 900"
- *onscreen?* (turns to safe-left?): "safe-left-huh 900"
- *safe-left?*: "true"
- *onscreen?* (turns back to facilitator): "true" +
{empty} +

*Ask the rest of the class*

- What is the problem with `onscreen?`?
+
_It's only talking to `safe-left?`, it's not checking with ``safe-right?``_
- How can `onscreen?` check with both?
+
_It needs to talk to `safe-left?` AND ``safe-right?``_

Have students complete link:{pathwayrootdir}pass:[lessons/alg-compound-inequalities/pages/onscreen.html][Word Problem: onscreen? (Page 46), window="_blank"]. When this functions is entered into WeScheme, students should now see that Sam is protected on _both_ sides of the screen.



[.strategy-box, cols="1", grid="none", stripes="none"]
|===
|
%CURRICULUMspan% class="title"%BEGINCURRICULUMspan%Extension Option%ENDCURRICULUMspan%

What if we wanted to keep Sam safe on the top and bottom edges of the screen as well?  What additional functions would we need?  What functions would need to change?}

|===
[.lesson-section-1]
== Boundry Detection in the Game %CURRICULUMspan% class="duration"%BEGINCURRICULUMspan%10 minutes%ENDCURRICULUMspan%

[.lesson-section-2]
=== Overview
Students identify common patterns between 2-dimensional boundary detection and detecting whether a player is onscreen. They apply the same problem-solving and narrow mathematical concept from the previous lesson to a more general problem.

[.lesson-section-2]
=== Launch

Have students open their in-progress game file and press Run.

- How are the `TARGET` and `DANGER` behaving right now? +
_They move across the screen._

- What do we want to change? +
_We want them to come back after they leave one side of the screen._

- How do we know when an image has moved off the screen? +
_We can see it._

- How can we make the computer understand when an image has moved off the screen? +
_We can teach the computer to compare the image's %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%coordinates%ENDCURRICULUMspan% to a numeric boundary, just like we did with Sam the Butterfly!_

[.lesson-section-2]
=== Investigate


Students apply what they learned from Sam the Butterly to fix the `safe-left?`, `safe-right?`, and `onscreen?` functions in their own code.

Since the screen dimensions for their game are 640x480, just like Sam, they can use their code from Sam as a starting point.

[.lesson-section-2]
=== Common Misconceptions
- Students will need to test their code with their images to see if the boundaries are correct for them.  Students with large images may need to use slightly wider boundaries, or vice versa for small images.  In some cases, students may have to go back and rescale their images if they are too large or too small for the game.
- Students may be surprised that the same code that "traps Sam" also "resets the `DANGER` and `TARGET`". It's critical to explain that these functions do _neither_ of those things! All they do is test if a coordinate is within a certain range on the x-axis. There is other code (hidden in the teachpack) that determines _what to do if the coordinate is offscreen_. The ability to re-use function is one of the most powerful features of mathematics - and programming!

[.lesson-section-1]
== Additional Exercises:
- link:{pathwayrootdir}pass:[lessons/alg-compound-inequalities/pages/is-hot.html][Word Problem: hot?, window="_blank"]
- link:{pathwayrootdir}pass:[lessons/alg-compound-inequalities/pages/is-sunny.html][Word Problem: sunny?, window="_blank"]
- link:{pathwayrootdir}pass:[lessons/alg-compound-inequalities/pages/is-beach-day.html][Word Problem: beach-day?, window="_blank"]


[.acknowledgment]
--
These materials were developed partly through support of the National Science Foundation, 
(awards 1042210, 1535276, 1648684, and 1738598). link:https://www.creativecommons.org/licenses/by-nc-nd/4.0/[image:{pathwayrootdir}../../lib/CCbadge.png[], window="_blank"]
Bootstrap:Algebra by Emmanuel Schanzer, Jen Poole, Ed Campos Jr, Flannery Denny, and Dorai Sitaram
is licensed under a
https://creativecommons.org/licenses/by-nc-nd/4.0/[Creative Commons 4.0 Unported License].
Based on a work at https://www.bootstrapworld.org[www.BootstrapWorld.org].
Permissions beyond the scope of this license may be available by contacting
mailto:schanzer@BootstrapWorld.org[schanzer@BootstrapWorld.org]. 
--
