[.LessonPlan]
[.wescheme]
= Domain and Range

%CURRICULUMspan% class="other-proglang"%BEGINCURRICULUMspan%link:{pathwayrootdir}../algebra-pyret/lessons/alg-domain-and-range/index.shtml[(Also available for Pyret)]%ENDCURRICULUMspan%


Students encounter String and Image datatypes and use "contracts" to make sense of the domain and range of functions.


[.left-header.preamble,cols="20a,80a",stripes=none]
|===

| Prerequisites | link:{pathwayrootdir}lessons/pass:[alg-order-of-operations]/index.shtml[Order of Operations]

| 
++++
<script>
function showStandardsAlignment() {
  const selectTag = document.getElementsByClassName('standardsAlignmentSelect')[0];
  const options = selectTag && selectTag.options;
  const stdTables = document.getElementsByClassName('alignedStandards');
  const intro = document.getElementsByClassName('alignedStandardsIntro')[0];
  let introNeeded = true;
  for (let i = 0; i < stdTables.length; i++) {
    const stdTable = stdTables[i];
    stdTable.style.display = 'none';
  }
  for (let i = 0; i < options.length; i++) {
    const opt = options[i];
    if (opt.selected) {
      const optStd = opt.value;
      for (let j = 0; j < stdTables.length; j++) {
        const stdTable = stdTables[j];
        if (stdTable.classList.contains(optStd)) {
          stdTable.style.display = 'block';
          introNeeded = false;
        }
      }
    }
  }
  intro.style.display = introNeeded ? 'block' : 'none';
}
</script>
++++

Relevant Standards%CURRICULUMselect% class="standardsAlignmentSelect"  multiple onchange="showStandardsAlignment()" style="height: 150px"%BEGINCURRICULUMselect%%CURRICULUMoption% value="standards-OK"%BEGINCURRICULUMoption%OK%ENDCURRICULUMoption%%CURRICULUMoption% value="standards-CC-Math"%BEGINCURRICULUMoption%CC-Math%ENDCURRICULUMoption%%ENDCURRICULUMselect%

|

include::./pathway-standards.asc[]

| Lesson Goals
| Students will be able to:

* Demonstrate understanding of %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Domain%ENDCURRICULUMspan% and %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Range%ENDCURRICULUMspan% and how they relate to %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%functions%ENDCURRICULUMspan%

| Student-facing Goals
|
* I can identify the domain and range of a function.
* I can identify the data types %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Number%ENDCURRICULUMspan%, %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%String%ENDCURRICULUMspan%, and %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Image%ENDCURRICULUMspan%

| Materials
|

* Lesson slides template (link:pass:[https://docs.google.com/presentation/d/1-G2RiCc20dGiexnPqIjLDdvPJWeSlBj_bTKEhngmqL0/edit?usp=sharing][Google Slides, window="_blank"])



* Exploring Image Functions (link:{pathwayrootdir}pass:[lessons/alg-domain-and-range/pages/exploring-image-functions.html][original (Page 17), window="_blank"], link:pass:[solution-pages/exploring-image-functions.html][solutions, window="_blank"])

* Reading for Domain and Range (link:{pathwayrootdir}pass:[lessons/alg-domain-and-range/pages/reading-for-domain-and-range.html][original (Page 18), window="_blank"], link:pass:[solution-pages/reading-for-domain-and-range.html][solution, window="_blank"])

| Preparation
|
* Make sure all materials have been gathered
* Decide how students will be grouped in pairs

| Supplemental Resources
|

* Functions Review (link:pass:[https://quizizz.com/admin/quiz/5d9919776c6f17001a9dc6a0][Quizizz, window="_blank"])
* Domain and Range Review (link:pass:[https://teacher.desmos.com/activitybuilder/custom/5d991ae71172d473178c9816][Desmos Activity, window="_blank"])



| Key Points For The Facilitator
|
* Check frequently for understanding of %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%data types%ENDCURRICULUMspan% and %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%contract%ENDCURRICULUMspan%s during this lesson and throughout subsequent lessons.

* Students will use their Contracts page frequently, so it should be kept in an accessible, convenient location.
|===

[.old-materials]
For a textbook-like version of materials similar to these, you may wish to see the link:pass:[https://www.bootstrapworld.org/materials/spring2020/courses/algebra/en-us/units/unit2/index.html][prior unit-based version, window="_blank"].



include::./pathway-glossary.asc[]

[.lesson-section-1]
== Warmup

 
Students should open link:pass:[https://www.wescheme.org][WeScheme, window="_blank"] in their browser, and click "Log In". This will ask them to log in with a valid Google account (Gmail, Google Classroom, YouTube, etc.), and then show them the "My Programs" page. This page is empty - they don't have any programs yet! Have them click "Start a New Program".



They will also want to have their link:pass:[../../back-matter/pages/contracts-1.html][Contracts page (back of workbook), window="_blank"] ready, preferably in paper form.

[.lesson-section-1]
== Contracts %CURRICULUMspan% class="duration"%BEGINCURRICULUMspan%15 minutes%ENDCURRICULUMspan%

[.lesson-section-2]
=== Overview
This activity introduces the notion of %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Contracts%ENDCURRICULUMspan%, which are a simple notation for keeping track of the set all of possible inputs and outputs for a function. They are also closely related to the concept of a _function machine_, which is introduced as well. __Note: Contracts are based on the same notation found in Algebra!__

[.lesson-section-2]
=== Launch
[.lesson-point]
For each input to a function, there is exactly one output

%CURRICULUMspan% class="right"%BEGINCURRICULUMspan% %CURRICULUMspan% class="tooltip"%BEGINCURRICULUMspan%%CURRICULUMspan% class="tooltiptext"%BEGINCURRICULUMspan%Source: Wikipedia%ENDCURRICULUMspan%
image:{pathwayrootdir}lessons/alg-domain-and-range/images/VerticalLineTest.png["Source: Wikipedia", 250]link:images/VerticalLineTest.png[%CURRICULUMspan% class="big"%BEGINCURRICULUMspan%&#x1f5bc;%ENDCURRICULUMspan%Show image,role="gdrive-only"]%ENDCURRICULUMspan% %ENDCURRICULUMspan%
Functions are a lot like machines: values go in, something happens, and new values come out. Let's start with an example of a function we all know: adding two numbers! Addition is like a machine that takes in pairs of numbers and produces a sum. 

Consider the graphs on the right: for every input on the x-axis, a function will produce a _single_ output. If we draw a vertical line and it hits the graph more than once, it means there is __more than one output__ for the same input. Like any good machine, function machines must be *reliable*. 

Whenever we use any machine, we always think about what goes in and what comes out. A coffee maker takes in coffee beans and water, and produces coffee. A toaster takes in bread and produces toast. We don't have to know exactly how coffee makers or toasters work in order to _use_ them. All we need to know is what type of thing goes in and what type of thing should come out!

In our coffee-maker example, we expect to get the exact same coffee out if we use the exact same beans and water each time. If you put bread in a toaster and got a bagel out, you'd be pretty surprised! __Functions work the same way:__  no matter how many times you plug in the same number, you will _always_ get the same result. And if you don't? *It's not a function!*

[.lesson-section-1]
== Investigate

We use something called a %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Contract%ENDCURRICULUMspan% to keep track of what goes in and out of these machines called functions. Contracts are like a "cheat sheet" for using functions. Once you know how to read one, you can quickly figure out how to use a function just by looking at its contract!

%CURRICULUMspan% class="clear"%BEGINCURRICULUMspan%

[.lesson-point]
The Contract for a function has three parts: the Name of the function, the %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Domain%ENDCURRICULUMspan%, and the %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Range%ENDCURRICULUMspan%

- The Name is simply how we refer to the function: 
`*`, `+`, `sqrt`, etc.
- The %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Domain%ENDCURRICULUMspan% tells us what the function "takes in", or _consumes_. These are also known as the _arguments_ to the function.
- The %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Range%ENDCURRICULUMspan% tells us what the function "gives back", _produces_.

Memorizing contracts is hard, and why memorize when we can just keep a log of them! Let's write them down so we can use them later! At the back of your workbook, you'll find pages with space to write down every contract you see in the course.

[.lesson-instruction]
- What does Multiplication need as an input? What does it produce?
- What inputs does the Square Root function consume? What does it produce? 
- When we Square something, what does the Square function consume and produce?

- Write the contracts for `+`, `-`, `*`, `/`, `sqr`, and `sqrt` into the Contracts page.


[.text-center]
*A Sample Contracts Table*

++++
<style>
.inlineContractTable width: 60%; margin: auto;%ENDCURRICULUMspan%
.inlineContractTable tbody .tableblock{ padding: 0px; margin: 0px; }
</style>
++++

[.inlineContractTable, cols="4,1,10,1,2", options="header", grid="rows"]
|===
| Name 			|	| Domain				|		| Range

|`;` `+`		| :	| `Number Number` 		|	->	| `Number`
|`;` `-` 		| :	| `Number Number` 		|	->	| `Number`
|`;` `sqr`		| :	| `Number`  			|	->	| `Number`
|`;` `sqrt`		| :	| `Number` 				|	->	| `Number`

|===

It would be silly to buy a coffee-maker that only works with one specific coffee! Similarly, Contracts don't tell us _specific_ inputs. They tell us the _%CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Datatype%ENDCURRICULUMspan%_ of input a function needs. For example, a Contract wouldn't say that addition requires "3 and 4". Addition works on more than just those two inputs! Instead, it would tells us that addition requires "two Numbers".  When we _use_ a Contract, we plug specific numbers into a mathematical expression.

[.lesson-point]
Contracts are general. Expressions are specific.

[.lesson-instruction]
*Optional:* Have students make a link:{pathwayrootdir}pass:[lessons/alg-domain-and-range/pages/frayer-model.pdf][Domain and Range Frayer model, window="_blank"] and use the visual organizer to explain the concepts of Domain and Range in their own words.

[.lesson-section-2]
=== Synthesize
- What is wrong with the contract 
`; + : 3 4 -> 7`?
- What is the difference between a value like `17` and a type like `Number`?

[.lesson-section-1]
== Exploring Image Functions %CURRICULUMspan% class="duration"%BEGINCURRICULUMspan%25 minutes%ENDCURRICULUMspan%

[.lesson-section-2]
=== Overview
Students explore functions that go beyond numbers, producing all sorts of simple geometric shapes and images in the process. Making images is highly motivating, and encourages students to get better at both reading error messages and persisting in catching bugs.

[.lesson-section-2]
=== Launch
Students have already seen `Number` values like `42`,`-91`, `1/4` or `0.25`, but computer programs can work with a much larger set of %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%datatypes%ENDCURRICULUMspan%. Show students examples of the `String` datatype, by having them type various things in quotation marks:

- `"hello"`
- `"many words, one string"`
- `"42"`
- `"1/3"`
- Something students come up with on their own...

[.lesson-point]
A String is _anything_ in quotation marks. Like Number values, String values evaluate to themselves.

[.lesson-instruction]
Here are two Circles of Evaluation. One of them is familiar, but the other very different from what you've seen before. What's different about the Circle on the right?

[cols="1,1", grid="none", frame="none"]
|===
| %CURRICULUMspan% class="right"%BEGINCURRICULUMspan%%CURRICULUMtable% class="gdrive-only expression"%BEGINCURRICULUMtable%%CURRICULUMtr%%BEGINCURRICULUMtr%%CURRICULUMtd% class="operator"%BEGINCURRICULUMtd%%CURRICULUMspan% class="operator"%BEGINCURRICULUMspan%%CURRICULUMspan% class="value wescheme-symbol"%BEGINCURRICULUMspan%{zwsp}*%ENDCURRICULUMspan%%ENDCURRICULUMspan%%ENDCURRICULUMtd%%ENDCURRICULUMtr%%CURRICULUMtr%%BEGINCURRICULUMtr%%CURRICULUMtd%%BEGINCURRICULUMtd%%CURRICULUMtable% class="args"%BEGINCURRICULUMtable%%CURRICULUMtr%%BEGINCURRICULUMtr%%CURRICULUMtd% class="arg"%BEGINCURRICULUMtd%%CURRICULUMspan% class="value wescheme-number"%BEGINCURRICULUMspan%10%ENDCURRICULUMspan%%ENDCURRICULUMtd%%CURRICULUMtd% class="arg"%BEGINCURRICULUMtd%%CURRICULUMspan% class="value wescheme-number"%BEGINCURRICULUMspan%-4%ENDCURRICULUMspan%%ENDCURRICULUMtd%%ENDCURRICULUMtr%%ENDCURRICULUMtable%%ENDCURRICULUMtd%%ENDCURRICULUMtr%%ENDCURRICULUMtable%%CURRICULUMspan% class="begin-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%%CURRICULUMdiv% class="circleevalsexp"%BEGINCURRICULUMdiv%%CURRICULUMspan% class="expression"%BEGINCURRICULUMspan%%CURRICULUMspan% class="lParen"%BEGINCURRICULUMspan%(%ENDCURRICULUMspan%%CURRICULUMspan% class="operator"%BEGINCURRICULUMspan%%CURRICULUMspan% class="value wescheme-symbol"%BEGINCURRICULUMspan%{zwsp}*%ENDCURRICULUMspan%%ENDCURRICULUMspan%%CURRICULUMspan% class="hspace"%BEGINCURRICULUMspan%{nbsp}%ENDCURRICULUMspan%%CURRICULUMspan% class="value wescheme-number"%BEGINCURRICULUMspan%10%ENDCURRICULUMspan%%CURRICULUMspan% class="hspace"%BEGINCURRICULUMspan%{nbsp}%ENDCURRICULUMspan%%CURRICULUMspan% class="value wescheme-number"%BEGINCURRICULUMspan%-4%ENDCURRICULUMspan%%CURRICULUMspan% class="rParen"%BEGINCURRICULUMspan%)%ENDCURRICULUMspan%%ENDCURRICULUMspan%%ENDCURRICULUMdiv%%CURRICULUMspan% class="end-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%%ENDCURRICULUMspan%
|%CURRICULUMtable% class="gdrive-only expression"%BEGINCURRICULUMtable%%CURRICULUMtr%%BEGINCURRICULUMtr%%CURRICULUMtd% class="operator"%BEGINCURRICULUMtd%%CURRICULUMspan% class="operator"%BEGINCURRICULUMspan%%CURRICULUMspan% class="value wescheme-symbol"%BEGINCURRICULUMspan%star%ENDCURRICULUMspan%%ENDCURRICULUMspan%%ENDCURRICULUMtd%%ENDCURRICULUMtr%%CURRICULUMtr%%BEGINCURRICULUMtr%%CURRICULUMtd%%BEGINCURRICULUMtd%%CURRICULUMtable% class="args"%BEGINCURRICULUMtable%%CURRICULUMtr%%BEGINCURRICULUMtr%%CURRICULUMtd% class="arg"%BEGINCURRICULUMtd%%CURRICULUMspan% class="value wescheme-number"%BEGINCURRICULUMspan%50%ENDCURRICULUMspan%%ENDCURRICULUMtd%%CURRICULUMtd% class="arg"%BEGINCURRICULUMtd%%CURRICULUMspan% class="value wescheme-string"%BEGINCURRICULUMspan%"solid"%ENDCURRICULUMspan%%ENDCURRICULUMtd%%CURRICULUMtd% class="arg"%BEGINCURRICULUMtd%%CURRICULUMspan% class="value wescheme-string"%BEGINCURRICULUMspan%"blue"%ENDCURRICULUMspan%%ENDCURRICULUMtd%%ENDCURRICULUMtr%%ENDCURRICULUMtable%%ENDCURRICULUMtd%%ENDCURRICULUMtr%%ENDCURRICULUMtable%%CURRICULUMspan% class="begin-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%%CURRICULUMdiv% class="circleevalsexp"%BEGINCURRICULUMdiv%%CURRICULUMspan% class="expression"%BEGINCURRICULUMspan%%CURRICULUMspan% class="lParen"%BEGINCURRICULUMspan%(%ENDCURRICULUMspan%%CURRICULUMspan% class="operator"%BEGINCURRICULUMspan%%CURRICULUMspan% class="value wescheme-symbol"%BEGINCURRICULUMspan%star%ENDCURRICULUMspan%%ENDCURRICULUMspan%%CURRICULUMspan% class="hspace"%BEGINCURRICULUMspan%{nbsp}%ENDCURRICULUMspan%%CURRICULUMspan% class="value wescheme-number"%BEGINCURRICULUMspan%50%ENDCURRICULUMspan%%CURRICULUMspan% class="hspace"%BEGINCURRICULUMspan%{nbsp}%ENDCURRICULUMspan%%CURRICULUMspan% class="value wescheme-string"%BEGINCURRICULUMspan%"solid"%ENDCURRICULUMspan%%CURRICULUMspan% class="hspace"%BEGINCURRICULUMspan%{nbsp}%ENDCURRICULUMspan%%CURRICULUMspan% class="value wescheme-string"%BEGINCURRICULUMspan%"blue"%ENDCURRICULUMspan%%CURRICULUMspan% class="rParen"%BEGINCURRICULUMspan%)%ENDCURRICULUMspan%%ENDCURRICULUMspan%%ENDCURRICULUMdiv%%CURRICULUMspan% class="end-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%
|===

Possible responses:

- We've never seen the function `star` before
- We've never seen Strings used in a Circle of Evaluation before
- We've never seen a function take in three inputs
- We've never seen a function take in a mix of Numbers and Strings

[.lesson-instruction]
Can you figure out the Name and %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Domain%ENDCURRICULUMspan% for the function in the second Circle? This is a chance to look for and make use of structure in deciphering a novel expression!

Possible responses:

- We know the name of the function is `star`, because that's what is at the top of the circle
- We know it has three things in its Domain
- We know the Domain consists of a Number and two Strings

[.lesson-instruction]
- But what about the %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Range%ENDCURRICULUMspan%? What do you think this expression will evaluate to? 
- Convert this Circle to code and try out!
- What does the `50` mean to the computer? Try replacing it with different values, and see what you get.
- What does the `"blue"` mean to the computer? Try replacing it with different values, and see what you get.
- What does the `"solid"` mean to the computer? Try replacing it with different values, and see what you get. *If you get an error, read it!* It just might give you a hint about what to do...

You've seen two %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%datatypes%ENDCURRICULUMspan% already: Numbers and Strings. Did we get back either on of those? The %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Range%ENDCURRICULUMspan% of `star` is a datatype we haven't seen before: an `Image`!

[.strategy-box, cols="1", grid="none", stripes="none"]
|===
|
%CURRICULUMspan% class="title"%BEGINCURRICULUMspan%Error Messages%ENDCURRICULUMspan%

The error messages in this environment are _designed_ to be as student-friendly as possible. Encourage students to read these messages aloud to one another, and ask them what they think the error message _means_. By explicitly drawing their attention to errors, you will be setting them up to be more independent in the next activity!
|===

Suppose we had never seen `star` before. How could we figure out how to use it, using the helpful error messages?

- Type `star` into the Interactions Area and hit "Enter". What did you get back? What does that mean? _There is something called "star", and the computer knows it's a function!_

- If it's a function, we know that it will need an open parentheses and at least one input. Have students try  `(star 50)`  
- What error did we get? What _hint_ does it give us about how to use this function?

[.lesson-section-2]
=== Investigate
[.lesson-instruction]
- Have students turn to link:{pathwayrootdir}pass:[lessons/alg-domain-and-range/pages/exploring-image-functions.html][Exploring Image Functions (Page 17), window="_blank"] in the workbook.
- Have students open a new program file and name it "Exploring Images".

Give students time to investigate image functions and see how many they can discover, using the Contracts page to organize their findings.

[.strategy-box, cols="1", grid="none", stripes="none"]
|===
|
%CURRICULUMspan% class="title"%BEGINCURRICULUMspan%Strategies for English Language Learners%ENDCURRICULUMspan%

MLR 2 - Collect and Display: As students explore, walk the room and record student language relating to functions, domain, range, contracts, or what they perceive from %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%error messages%ENDCURRICULUMspan%.  This output can be used for a concept map, which can be updated and built upon, bridging student language with disciplinary language while increasing sense-making.
|===

[.lesson-section-2]
=== Synthesize
- *What image functions did you and your partner discover?*
``rectangle``, `triangle`, `ellipse`, `circle`, etc.
- *How did you decide what to try?*
- *What error messages did you see?*
_Input mismatches, missing parentheses, etc._
- *How did you figure out what to do after seeing an error message?*
_Read the error message, think about what the computer is trying to tell us, etc._

[.lesson-section-1]
== Making Sense of Contracts %CURRICULUMspan% class="duration"%BEGINCURRICULUMspan%10 minutes%ENDCURRICULUMspan%

[.lesson-section-2]
=== Overview
This activity digs deeper into Contracts, and has students create their own Contracts trackers to take ownership of the concept and create an artifact they can refer back to.

[.lesson-section-2]
=== Launch

`star` has three elements in its Domain: A Number, a String, and another String.  

- *What do these elements represent?*
_The Number is the radius, the first String is the style (either `outline` or `solid`), the second String is the color._

- *What happens if I don't give it those things?*
_We won't get the star we want, we'll probably get an error!_

- *If I give `star` what it needs, what do I get in return?*
_An Image of the star that matches the arguments_

- *`square` has the same Domain as `star`.  What do the arguments in `square` represent?*
_length, style, color_

- *Can different functions have the same Domain?  The same Range?  Are they still different functions?*
_Yes, yes, and yes!_

- *Can we come up with an example of two math functions that have the same Domain and Range?*

[.lesson-point]
When the input matches what the function consumes, the function produces the output we expect.

*Where else have you heard the word "contract"?  How can you connect that meaning to contracts in programming?*

_An actor signs a contract agreeing to perform in a film in exchange for compensation, a contractor makes an agreement with a homeowner to build or repair something in a set amount of time for compensation, or a parent agrees to pizza for dinner in exchange for the child completing their chores. Similarly, a contract in programming is an *agreement* between what the function is given and what it produces._

[.lesson-section-2]
=== Investigate
[.lesson-instruction]
- Students complete link:{pathwayrootdir}pass:[lessons/alg-domain-and-range/pages/reading-for-domain-and-range.html][Reading for Domain and Range (Page 18), window="_blank"] with their partner.

[.lesson-instruction]
Students create a visual "Contracts page" either digitally or physically.  Ask students to think about how they visualize contracts in their own minds and how they could use that imagery to explain functions and their contracts to others.


[.lesson-section-1]
== Additional Exercises:



- link:pass:[https://quizizz.com/admin/quiz/5cdcb3907f8c98001a203c1b][Bootstrap:Algebra - Contracts, Domain/Range, Data Types, & Functions, window="_blank"] (Quizizz)

- link:pass:[https://teacher.desmos.com/activitybuilder/custom/5cdcb288f41b366950eba1e1][Bootstrap:Algebra - Data Types & Circles of Evaluation, window="_blank"] (Desmos Activity)

- link:pass:[https://teacher.desmos.com/activitybuilder/custom/5cdcb3f555e3fb606a1f1ba2][Bootstrap:Algebra - Data Types, Circles of Evaluation, and Contracts, window="_blank"] (Desmos Activity)

- Converting Circles of Evaluation to Code (1)
(link:{pathwayrootdir}pass:[lessons/alg-domain-and-range/pages/many-types-coe-to-code1.html][original, window="_blank"] ,
link:{pathwayrootdir}pass:[lessons/alg-domain-and-range/solution-pages/many-types-coe-to-code1.html][answers, window="_blank"])

- Converting Circles of Evaluation to Code (2)
(link:{pathwayrootdir}pass:[lessons/alg-domain-and-range/pages/many-types-coe-to-code2.html][original, window="_blank"] ,
link:{pathwayrootdir}pass:[lessons/alg-domain-and-range/solution-pages/many-types-coe-to-code2.html][answers, window="_blank"])

- Identifying Parts of Expressions (1)
(link:{pathwayrootdir}pass:[lessons/alg-domain-and-range/pages/id-expr-pieces1.html][original, window="_blank"] ,
link:{pathwayrootdir}pass:[lessons/alg-domain-and-range/solution-pages/id-expr-pieces1.html][answers, window="_blank"])

- Identifying Parts of Expressions (2)
(link:{pathwayrootdir}pass:[lessons/alg-domain-and-range/pages/id-expr-pieces2.html][original, window="_blank"] ,
link:{pathwayrootdir}pass:[lessons/alg-domain-and-range/solution-pages/id-expr-pieces2.html][answers, window="_blank"])

- Matching Expressions & Contracts
(link:{pathwayrootdir}pass:[lessons/alg-domain-and-range/pages/match-contracts-exprs1.html][original, window="_blank"] ,
link:{pathwayrootdir}pass:[lessons/alg-domain-and-range/solution-pages/match-contracts-exprs1.html][answers, window="_blank"])



[.acknowledgment]
--
These materials were developed partly through support of the National Science Foundation, 
(awards 1042210, 1535276, 1648684, and 1738598). link:https://www.creativecommons.org/licenses/by-nc-nd/4.0/[image:{pathwayrootdir}../../lib/CCbadge.png[], window="_blank"]
Bootstrap:Algebra by Emmanuel Schanzer, Jen Poole, Ed Campos Jr, Flannery Denny, and Dorai Sitaram
is licensed under a
https://creativecommons.org/licenses/by-nc-nd/4.0/[Creative Commons 4.0 Unported License].
Based on a work at https://www.bootstrapworld.org[www.BootstrapWorld.org].
Permissions beyond the scope of this license may be available by contacting
mailto:schanzer@BootstrapWorld.org[schanzer@BootstrapWorld.org]. 
--
