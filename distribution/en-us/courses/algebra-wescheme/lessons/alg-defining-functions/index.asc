[.LessonPlan]
[.wescheme]
= Defining Functions

%CURRICULUMspan% class="other-proglang"%BEGINCURRICULUMspan%link:{pathwayrootdir}../algebra-pyret/lessons/alg-defining-functions/index.shtml[(Also available for Pyret)]%ENDCURRICULUMspan%


Students discover functions as an abstraction over a programming pattern, and are introduced to a structured approach to building them called the Design Recipe.


[.left-header.preamble,cols="20a,80a",stripes=none]
|===

| Prerequisites | link:{pathwayrootdir}lessons/pass:[alg-defining-values]/index.shtml[Defining Values]

| 
++++
<script>
function showStandardsAlignment() {
  const selectTag = document.getElementsByClassName('standardsAlignmentSelect')[0];
  const options = selectTag && selectTag.options;
  const stdTables = document.getElementsByClassName('alignedStandards');
  const intro = document.getElementsByClassName('alignedStandardsIntro')[0];
  let introNeeded = true;
  for (let i = 0; i < stdTables.length; i++) {
    const stdTable = stdTables[i];
    stdTable.style.display = 'none';
  }
  for (let i = 0; i < options.length; i++) {
    const opt = options[i];
    if (opt.selected) {
      const optStd = opt.value;
      for (let j = 0; j < stdTables.length; j++) {
        const stdTable = stdTables[j];
        if (stdTable.classList.contains(optStd)) {
          stdTable.style.display = 'block';
          introNeeded = false;
        }
      }
    }
  }
  intro.style.display = introNeeded ? 'block' : 'none';
}
</script>
++++

Relevant Standards%CURRICULUMselect% class="standardsAlignmentSelect"  multiple onchange="showStandardsAlignment()" style="height: 150px"%BEGINCURRICULUMselect%%CURRICULUMoption% value="standards-CC-Math"%BEGINCURRICULUMoption%CC-Math%ENDCURRICULUMoption%%ENDCURRICULUMselect%

|

include::./pathway-standards.asc[]


| Lesson Goals
| Students will be able to:

* Describe the usefulness of %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%functions%ENDCURRICULUMspan%.
* Create their own functions and %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%examples%ENDCURRICULUMspan% given the constraints of a problem.

| Student-Facing Lesson Goals
|
* I can explain why a function is useful.
* I can plan and create my own function with examples.

| Materials
|

* Lesson slides template (link:pass:[https://docs.google.com/presentation/d/1rhIhbK79JW_Kw-5QSc-kPUWXpqKd3pnKWT33GPYFW4Y/][Google Slides, window="_blank"])


* Mapping Examples with Circles of Evaluation worksheet (link:{pathwayrootdir}pass:[lessons/alg-defining-functions/pages/MappingExamplesWithCoE.html][HTML (Page 25), window="_blank"])

* Fast Functions worksheet (link:{pathwayrootdir}pass:[lessons/alg-defining-functions/pages/FastFunctions.html][original (Page 26), window="_blank"], 
link:pass:[solution-pages/FastFunctions.html][solutions, window="_blank"])

| Preparation
|
* Make sure all materials have been gathered
* Decide how students will be grouped in pairs

| Supplemental Resources
|
- Expression Bundle (link:pass:[https://teacher.desmos.com/expressions][Desmos Activities, window="_blank"])
- Variables and Expressions (link:pass:[https://quizizz.com/admin/quiz/576d1e5f91cb32ef5fc67529/variables-and-expressions][Quizizz, window="_blank"])
- Functions Bundle (link:pass:[https://teacher.desmos.com/functions][Desmos Activities, window="_blank"])
//- Functions @ link{https://quizizz.com/admin/quiz/582b7390e8e0c0c201647d9d/functions, Quizizz })
- Function Notation (link:pass:[https://quizizz.com/admin/quiz/582f0e34b805cc5c6608d326/function-notation][Quizizz, window="_blank"])


| Key Points for the Facilitator
|
* This lesson represents a big shift in thinking.  After some practice, students will not be limited to pre-existing functions!
* Take plenty of time for the %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Design Recipe%ENDCURRICULUMspan% as students will return to it frequently in future lessons.
|===

[.old-materials]
For a textbook-like version of materials similar to these, you may wish to see the link:pass:[https://www.bootstrapworld.org/materials/spring2020/courses/algebra/en-us/units/unit4/index.html][prior unit-based version, window="_blank"]



include::./pathway-glossary.asc[]

[.lesson-section-1]
== Warmup

Students should have their workbook, pencil, and be logged into
 link:pass:[https://www.wescheme.org][WeScheme, window="_blank"] 
on their computer.

[.lesson-section-1]
== Identifying Repeated _Patterns_ %CURRICULUMspan% class="duration"%BEGINCURRICULUMspan%30 minutes%ENDCURRICULUMspan%

[.lesson-section-2]
=== Overview
As with the Defining Values lesson, students search for structure in a list of expressions. But this time, the structures are _dynamic_, meaning they change in a predictable way. This is the foundation for defining functions.

[.lesson-section-2]
=== Launch

%CURRICULUMspan% class="tooltip centered-image"%BEGINCURRICULUMspan%%CURRICULUMspan% class="tooltiptext"%BEGINCURRICULUMspan%I Love Green Triangles%ENDCURRICULUMspan%
image:{pathwayrootdir}lessons/alg-defining-functions/images/ILoveGreenTriangles.jpg["I Love Green Triangles", 400, align="center"]link:images/ILoveGreenTriangles.jpg[%CURRICULUMspan% class="big"%BEGINCURRICULUMspan%&#x1f5bc;%ENDCURRICULUMspan%Show image,role="gdrive-only"]%ENDCURRICULUMspan%

%CURRICULUMspan% class="tooltip centered-image"%BEGINCURRICULUMspan%%CURRICULUMspan% class="tooltiptext"%BEGINCURRICULUMspan%I Love Green Triangles%ENDCURRICULUMspan%
image:{pathwayrootdir}lessons/alg-defining-functions/images/GreenTriangle.jpg["I Love Green Triangles", 400, align="center"]link:images/GreenTriangle.jpg[%CURRICULUMspan% class="big"%BEGINCURRICULUMspan%&#x1f5bc;%ENDCURRICULUMspan%Show image,role="gdrive-only"]%ENDCURRICULUMspan%

Confess to your students, "I LOVE green triangles." Challenge them to use the %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Definitions area%ENDCURRICULUMspan% to make as many DIFFERENT solid green triangles as they can in 2 minutes. 

Walk around the room and give positive feedback on the green triangles.  After the 2 minutes, ask for some examples of green triangles that they wrote and copy them to the board.  Be specific and attend to precision with the %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%syntax%ENDCURRICULUMspan% such that students can visually spot the pattern between the different lines of code.

For example:

```
(triangle 30  "solid" "green")
(triangle 12  "solid" "green")
(triangle 500 "solid" "green")
```



[.notice-box, cols="1", grid="none", stripes="none"]
|===
|
%CURRICULUMspan% class="title"%BEGINCURRICULUMspan%Notice and Wonder%ENDCURRICULUMspan%

Direct students to the various lines of code they came up with.
What do you notice?  What do you wonder?
|===

- *Is there a pattern?*
_Yes, the code mostly stayed the same with one change each time._

- *What stayed the same?*
_The function name `triangle`, "solid", "green"._

- *What changed?*
_The number being given to `triangle`, or the %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Number%ENDCURRICULUMspan% input._

- *What strategy did you use to create many different triangles?*
_Answers vary: Pattern matching, copy and paste_

- *What shortcut did we use before when we wanted to use the same code over and over?* +
_We defined values in the Definitions area._

We've learned how to define *values* when we want to create a shortcut to reuse the same code over and over.

For example:
 (define myStar (star 50 "solid" "gold")) 


*But to make a shortcut that _changes_ such as creating solid, green triangles of a changing size, we need to define a _function_.*

Suppose we want to define a shortcut called `gt`. When we give it a number, it makes a solid green triangle of whatever size we gave it. 

Select a student to _act out_ `gt`. Make it clear to the class that their Name is "gt", they expect a Number, and they will produce an Image. Run through some sample examples before having the class add their own:


- You say: *gt 20!*
The student responds: _(triangle 20 "solid" "green")!_
- You say: *gt 200!*
The student responds: _(triangle 200 "solid" "green")!_
- You say: *gt 99!*
The student responds: _(triangle 99 "solid" "green")!_ 



We need to program the computer to be as smart as our volunteer. But how do we do that?

[.lesson-section-2]
=== Investigate

[.lesson-point]
Word Problem: Write a function called `gt` that takes in a Number and produces a solid, green triangle of that given size.

Have students follow along on the link:{pathwayrootdir}pass:[lessons/alg-defining-functions/pages/FastFunctions.html][Fast Functions (Page 26), window="_blank"] handout.

- *1. Write the %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%contract%ENDCURRICULUMspan% for this new function by looking at the word problem.* +
** What does `gt` take in? +
_A Number_
** What does `gt` give back? +
_An Image. Students may say "a triangle", follow up by asking what data type that triangle will be (Number, String, or Image)_

- *2. Write some examples of how this function should work.*
** If I typed
 `(gt 40)` 
, what would I want the program to do? +
_I'd want the computer the execute the code_
 `(triangle 40 "solid" "green")`.  

_This is a tough question at first.  If students are unsure, remind them that we're just writing a shortcut for making green triangles so we don't have to type `triangle`, "solid", and "green" every time!_ 

- OPTIONAL: Have students complete the link:{pathwayrootdir}pass:[lessons/alg-defining-functions/pages/MappingExamplesWithCoE.html][Mapping Examples with Circles of Evaluation (Page 25), window="_blank"] worksheet showing how their function examples are working.

- *3. Circle and Label what is "change-able" - or _variable_ between the examples. Circle and label it with a name that describes it.* +
_The number is changing in each example.  We could name it "x", but "size" is a more accurate name._ +


%CURRICULUMspan% class="tooltip centered-image"%BEGINCURRICULUMspan%%CURRICULUMspan% class="tooltiptext"%BEGINCURRICULUMspan%Circle and label what is changing%ENDCURRICULUMspan%
image:{pathwayrootdir}lessons/alg-defining-functions/images/WhatChanges-WeScheme.png["Circle and label what is changing", 400, align="center"]link:images/WhatChanges-WeScheme.png[%CURRICULUMspan% class="big"%BEGINCURRICULUMspan%&#x1f5bc;%ENDCURRICULUMspan%Show image,role="gdrive-only"]%ENDCURRICULUMspan%



- *4. Write the function definition.* +

__Look at the two examples.  The function definition will follow the same pattern, but it will use the variable name `size` in place of the variable part we circled. If it doesn't change between the examples, we just copy it.__ 


 (define (gt size) (triangle size, "solid", "green"))


[.strategy-box, cols="1", grid="none", stripes="none"]
|===
|%CURRICULUMspan% class="title"%BEGINCURRICULUMspan%Connecting to Best Practices%ENDCURRICULUMspan%

- Writing the examples is like "showing your work" in math class.

- Have students circle what is changing and label it with a proper variable name.  The name of the variable should reflect what it represents, such as `size`.

- Writing examples and identifying the variables lays the groundwork for writing the function, which is especially important as the functions get more complex.  Don't skip this step!

|===

[.lesson-instruction]
Now that students have defined `gt` have them save their program as 'Defining Functions' and test out their newly created function in the Interactions window.

[.lesson-section-2]
=== Synthesize
- *What is the domain for `gt`?*
_Number_

- *Why might someone think the domain for `gt` contains a Number and two Strings, because that's the Domain of `triangle`?*  The function `gt` _uses_ `triangle`, but only needs one Number input because _that's the only part that's changing._
- *Why is defining functions useful to us as programmers?*

[.lesson-section-1]
== Practicing the Design Recipe %CURRICULUMspan% class="duration"%BEGINCURRICULUMspan%flexible%ENDCURRICULUMspan%

[.lesson-section-2]
=== Overview
This is a chance for students to independently review the steps learned in the prior activity, with the teacher in a supporting role asking guiding questions and giving support when needed.  

[.lesson-section-2]
=== Launch
*Word Problem: Write a function called `gold-star` that takes in number and produces a solid, gold star of that given size.*

* Write 2 examples and the definition of `gold-star` on the 'Fast Functions' handout.
* Complete the `gold-star` example on the link:{pathwayrootdir}pass:[lessons/alg-defining-functions/pages/FastFunctions.html][Fast Functions (Page 26), window="_blank"] worksheet.

[.lesson-section-2]
=== Investigate
[.lesson-instruction]
- Design a problem for a function that takes in one input and returns a shape that uses that input. Your function's input could be a Number, as in the two examples, or a String.
- Write two examples and a definition for your function
- Complete the link:{pathwayrootdir}pass:[lessons/alg-defining-functions/pages/MappingExamplesWithCoE.html][Mapping Examples with Circles of Evaluation (Page 25), window="_blank"] for the examples of your function.

[.lesson-section-1]
== Closing
The Design Recipe is a powerful tool for solving word problems. In this lesson, students practiced using it on simple _programming problems_, but soon they'll be applying it to traditional math problems. Encourage them to make this connection on their own: can they think of a math problem in which this would be useful?

[.lesson-section-1]
== Additional Exercises:

* Review: Define Values & Fast Functions (link:pass:[https://teacher.desmos.com/activitybuilder/custom/5cdcaea0b4b8576069fdca4f][Desmos Activity, window="_blank"])


* Matching Examples & Function Definitions
(link:{pathwayrootdir}pass:[lessons/alg-defining-functions/pages/match-examples-functions1.html][original, window="_blank"] ,
link:{pathwayrootdir}pass:[lessons/alg-defining-functions/solution-pages/match-examples-functions1.html][answers, window="_blank"])

* Creating Contracts from Examples (1)
(link:{pathwayrootdir}pass:[lessons/alg-defining-functions/pages/create-contracts-examples1.html][original, window="_blank"] ,
link:{pathwayrootdir}pass:[lessons/alg-defining-functions/solution-pages/create-contracts-examples1.html][answers, window="_blank"])

* Creating Contracts from Examples (2)
(link:{pathwayrootdir}pass:[lessons/alg-defining-functions/pages/create-contracts-examples2.html][original, window="_blank"] ,
link:{pathwayrootdir}pass:[lessons/alg-defining-functions/solution-pages/create-contracts-examples2.html][answers, window="_blank"])


[.acknowledgment]
--
These materials were developed partly through support of the National Science Foundation, 
(awards 1042210, 1535276, 1648684, and 1738598). link:https://www.creativecommons.org/licenses/by-nc-nd/4.0/[image:{pathwayrootdir}../../lib/CCbadge.png[], window="_blank"]
Bootstrap:Algebra by Emmanuel Schanzer, Jen Poole, Ed Campos Jr, Flannery Denny, and Dorai Sitaram
is licensed under a
https://creativecommons.org/licenses/by-nc-nd/4.0/[Creative Commons 4.0 Unported License].
Based on a work at https://www.bootstrapworld.org[www.BootstrapWorld.org].
Permissions beyond the scope of this license may be available by contacting
mailto:schanzer@BootstrapWorld.org[schanzer@BootstrapWorld.org]. 
--
