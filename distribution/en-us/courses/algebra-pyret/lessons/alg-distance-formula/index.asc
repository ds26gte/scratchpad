[.LessonPlan]
[.pyret]
= The Distance Formula

%CURRICULUMspan% class="other-proglang"%BEGINCURRICULUMspan%link:{pathwayrootdir}../algebra-wescheme/lessons/alg-distance-formula/index.shtml[(Also available for WeScheme)]%ENDCURRICULUMspan%


Students apply their knowledge of the Pythagorean Theorem and Circles of Evaluation to develop a function for the distance formula.


[.left-header.preamble,cols="20a,80a",stripes=none]
|===

| Prerequisites | link:{pathwayrootdir}lessons/pass:[alg-piecewise-functions]/index.shtml[Piecewise Functions]

| 
++++
<script>
function showStandardsAlignment() {
  const selectTag = document.getElementsByClassName('standardsAlignmentSelect')[0];
  const options = selectTag && selectTag.options;
  const stdTables = document.getElementsByClassName('alignedStandards');
  const intro = document.getElementsByClassName('alignedStandardsIntro')[0];
  let introNeeded = true;
  for (let i = 0; i < stdTables.length; i++) {
    const stdTable = stdTables[i];
    stdTable.style.display = 'none';
  }
  for (let i = 0; i < options.length; i++) {
    const opt = options[i];
    if (opt.selected) {
      const optStd = opt.value;
      for (let j = 0; j < stdTables.length; j++) {
        const stdTable = stdTables[j];
        if (stdTable.classList.contains(optStd)) {
          stdTable.style.display = 'block';
          introNeeded = false;
        }
      }
    }
  }
  intro.style.display = introNeeded ? 'block' : 'none';
}
</script>
++++

Relevant Standards%CURRICULUMselect% class="standardsAlignmentSelect"  multiple onchange="showStandardsAlignment()" style="height: 150px"%BEGINCURRICULUMselect%%CURRICULUMoption% value="standards-OK"%BEGINCURRICULUMoption%OK%ENDCURRICULUMoption%%CURRICULUMoption% value="standards-CC-Math"%BEGINCURRICULUMoption%CC-Math%ENDCURRICULUMoption%%ENDCURRICULUMselect%

|

include::./pathway-standards.asc[]


| Lesson Goals
|Students will be able to:

* Explain how the distance formula is related to the Pythagorean theorem.
* Write a function for the distance formula.

| Student-Facing Lesson Goals
|
* I can explain how the distance formula is connected to the Pythagorean theorem.
* I can write a function that takes in 2 points and returns the distance between them.

| Materials
|



* link:pass:[https://docs.google.com/presentation/d/1WVWq3JVFlq8OgpLGIUFQ9mR7DbADkgMxR8NYPhuPQN4/edit?usp=sharing][Lesson slides, window="_blank"] (Google Slides)


* link:{pathwayrootdir}pass:[lessons/alg-distance-formula/pages/Distance-Multiple-Representations.pdf][Multiple Representations (Page 55), window="_blank"] (PDF)

* Design Recipe: Distance - link:{pathwayrootdir}pass:[lessons/alg-distance-formula/pages/distance.html][Original (Page 56), window="_blank"], link:{pathwayrootdir}pass:[lessons/alg-distance-formula/pages/distance.html][Solution (Page 56), window="_blank"]

| Supplemental Resources
|
- Absolute Value (link:pass:[https://teacher.desmos.com/activitybuilder/custom/58efa58b999d890619a5663e][Desmos, window="_blank"])
- Absolute Value Inequality Illustrator (link:pass:[https://www.geogebra.org/m/rq7uDucY][Geogebra, window="_blank"])
- Absolute Value (link:pass:[https://quizizz.com/admin/quiz/581c92bd3fa551e37a438264/absolute-value-preview][Quizizz, window="_blank"])
- Distance Formula (link:pass:[https://www.geogebra.org/m/DTeGM5U7][Geogebra, window="_blank"])
- Distance Formula (link:pass:[https://quizizz.com/admin/quiz/5876366405dad51d02b1beef/distance-formula][Quizizz, window="_blank"])
- Pythagorean Theorem (link:pass:[https://quizizz.com/admin/quiz/5828a9f82627ff7d77818381/pythagorean-theorem][Quizizz, window="_blank"])
- Pythagorean Theorem (link:pass:[https://www.geogebra.org/m/jFFERBdd#material/ZFTGX57r][Geogebra, window="_blank"])

| Preparation
|
* Make sure all materials have been gathered
* Decide how students will be grouped in pairs

| Key Points for the Facilitator
|
* The distance formula is an excellent review of %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Circles of Evaluation%ENDCURRICULUMspan%. Have students work out the expression in small groups to foster discussion.
|===

[.old-materials]
For a textbook-like version of materials similar to these, you may wish to see the link:pass:[https://www.bootstrapworld.org/materials/spring2020/courses/algebra/en-us/units/unit8/index.html][prior unit-based version, window="_blank"]



include::./pathway-glossary.asc[]

[.lesson-section-1]
== Warmup

Students should have their workbook, pencil, and be logged into
    link:pass:[https://code.pyret.org][code.pyret.org, window="_blank"] 
on their computer.

[.lesson-section-1]
== Distance in 1 Dimension %CURRICULUMspan% class="duration"%BEGINCURRICULUMspan%15 minutes%ENDCURRICULUMspan%

[.lesson-section-2]
=== Overview
Students discover the need for distance calculation (first in one dimension, then in two) in video games.

[.lesson-section-2]
=== Launch

[.lesson-instruction]
Open your saved Game File, which should have the Target and Danger moving on their own. Your Player should respond to keypresses, and the Target and Danger should re-appear after they leave the screen. It's almost fully-playable!

{empty}

- What seems to be missing from this game?
+
_The characters aren't doing anything when they collide._

- What does it mean for characters to 'hit' one another? To collide?
+
_They have to be close enough to touch._

- How will the computer know when the characters have collided?
+
_When the coordinates of the characters are really close to each other._

%CURRICULUMspan% class="right"%BEGINCURRICULUMspan%image:{pathwayrootdir}lessons/alg-distance-formula/images/screenshot.jpg["", ]link:images/screenshot.jpg[%CURRICULUMspan% class="big"%BEGINCURRICULUMspan%&#x1f5bc;%ENDCURRICULUMspan%Show image,role="gdrive-only"]%ENDCURRICULUMspan%
[.lesson-instruction]
Scroll down to the `distances-color` definition (look for `; 4. Collisions` in the file). Right now this value is defined to be the __empty string__ `""`. Change this to a color that will show up on your background, and click "Run".

This setting will draw lines from your Player to each of the other characters, and then use those lines as the hypoteneuse of right triangles! 

The legs of these triangles show the distance in 1 dimension each (on the x- and y-axis). How is this calculated?

%CURRICULUMspan% class="clear"%BEGINCURRICULUMspan%

[.lesson-instruction]
--
Role-Play: Ask a volunteer to help role-play two characters colliding! 

- Identify a "number line" on the floor (this can be done just by pointing, or with a visual aid). 
- Make sure that you and your volunteer stand with feet as close together as possible, representing the infinitely small point that identifies your center.
- Raise your arms to form a "T shape", representing the outer edges of the characters.
- Emphasize that this represents _one dimension_ (perhaps the x- or y-axis).
- With the volunteer, stand about 10 steps away from one another and side-step towards each other one step at a time, while asking the class, "True or False? We are colliding!" __Be sure to only accept "true" and "false" as responses - not "yes" and "no"!__
- Ask the class how far apart you and your volunteer are, and then ask them how they would calculate this if you were standing on a number line and they could see the actual coordinates under your feet.
- After a few iterations, try switching places and repeating. _Point out that students always subtract the smaller number from the larger one, regardless of the character order!_
- Do this until students can clearly see it's when the two characters are 'touching' or 'overlapping' in some way - NOT when they are 'at the same point.'
--

[.lesson-section-2]
=== Investigate

Let's explore how the program computes the length of these lines...

[.lesson-instruction]
Have students explore using the `line-length` function in the %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Interactions area%ENDCURRICULUMspan%.

[.strategy-box, cols="1", grid="none", stripes="none"]
|===
|
%CURRICULUMspan% class="title"%BEGINCURRICULUMspan%Extension%ENDCURRICULUMspan%

`line-length` is essentially the way students conceptualize distance in one dimension.

You can extend this `line-length` activity into a lesson on absolute value and have students program `line-length` themselves. Computing 1-dimensional distance - and absolute value - are in fact piecewise functions!
|===

[.lesson-instruction]
- What does this function _do?_
- Why does it use conditionals?

[.lesson-section-2]
=== Synthesize
Make absolutely certain that students understand that this function _always returns the positive distance_ between two points on a number line.

What if we have points that are not on the same line? What if instead they differ by both the x- and y-coordinate? 

[.lesson-section-1]
== Distance in 2 Dimensions %CURRICULUMspan% class="duration"%BEGINCURRICULUMspan%30 minutes%ENDCURRICULUMspan%

[.lesson-section-2]
=== Overview
Students extend their understanding of _distance_ from one dimension to two, using a geometric proof of the Pythagorean Theorem to compute the distance between two points.

[.lesson-section-2]
=== Launch
%CURRICULUMspan% class="right"%BEGINCURRICULUMspan%image:{pathwayrootdir}lessons/alg-distance-formula/images/2d-distance.png["", ]link:images/2d-distance.png[%CURRICULUMspan% class="big"%BEGINCURRICULUMspan%&#x1f5bc;%ENDCURRICULUMspan%Show image,role="gdrive-only"]%ENDCURRICULUMspan%
Bring your volunteer (or choose a different one!) back up to the front of the class, and have them squat down on the floor to represent a difference in the y-coordinate between the player and a character. Repeat the role-play activity. 

[.lesson-instruction]
Suppose the Player is at (0, 4), and another game character is at (3, 0). Now there is a difference in both dimensions. How could we calculate distance _now?_

Computing the distance in 1-dimension is great, as long as the Player and Danger have the same x- or y-coordinate. In that case, the difference between the coordinates is exactly the distance between the two characters. But how do we compute the distance between two points when both the x- _and_ y-coordinates are different?

Have students watch link:pass:[https://www.youtube.com/watch?v=Ln7myXQx8TM][video of this problem, window="_blank"] [Credit: Tova Brown], and try explaining the proof to one another. In our case, the lengths A and B are computed by the `line-length` function we already have!

[.strategy-box, cols="1", grid="none", stripes="none"]
|===
|
%CURRICULUMspan% class="title"%BEGINCURRICULUMspan%Why line-length?%ENDCURRICULUMspan%
Students learn early on that distance in 1-dimension is computed via %CURRICULUMspan% class="gdrive-only"%BEGINCURRICULUMspan%\lvert x_2 - x_1 \rvert%ENDCURRICULUMspan%%CURRICULUMspan% class="begin-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%%CURRICULUMSCRIPT%%BEGINCURRICULUMSCRIPT%\displaystyle \lvert x_2 - x_1 \rvert%ENDCURRICULUMSCRIPT%%CURRICULUMspan% class="end-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%, and that distance is always a positive value. The Pythagorean Theorem teaches students that the length of the hypoteneuse is computed based on the distance in the x- and y-dimension. However, most math textbooks show the distance formula without connecting back to that formula:

%CURRICULUMspan% class="gdrive-only"%BEGINCURRICULUMspan%&radic;( ( (x_2 - x_1) )^2 + ( (y_2 - y_1) )^2 )%ENDCURRICULUMspan%%CURRICULUMspan% class="begin-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%%CURRICULUMSCRIPT%%BEGINCURRICULUMSCRIPT%\displaystyle \sqrt{{(x_2 - x_1)}^2 + {(y_2 - y_1)}^2}%ENDCURRICULUMSCRIPT%%CURRICULUMspan% class="end-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%

A student who asks whether it's a problem when %CURRICULUMspan% class="gdrive-only"%BEGINCURRICULUMspan%x_2 - x_1%ENDCURRICULUMspan%%CURRICULUMspan% class="begin-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%%CURRICULUMSCRIPT%%BEGINCURRICULUMSCRIPT%\displaystyle x_2 - x_1%ENDCURRICULUMSCRIPT%%CURRICULUMspan% class="end-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan% is negative is displaying a deep understanding of what's going on. Unfortunately, the response to this student relies on a computational artifact of squaring to force a number to be positive (rather than the purpose of squaring in the Pythagorean Theorem). Using the `line-length` function explicitly connects the distance formula back to the 1-dimensional distance students know, allowing them to apply prior knowledge and better connecting back to the Pythagorean Theorem itself. This effectively rewrites the distance formula as:

%CURRICULUMspan% class="gdrive-only"%BEGINCURRICULUMspan%&radic;( ( \lvert x_2 - x_1 \rvert )^2 + ( \lvert y_2 - y_1 \rvert )^2 )%ENDCURRICULUMspan%%CURRICULUMspan% class="begin-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%%CURRICULUMSCRIPT%%BEGINCURRICULUMSCRIPT%\displaystyle \sqrt{{\lvert x_2 - x_1 \rvert}^2 + {\lvert y_2 - y_1 \rvert}^2}%ENDCURRICULUMSCRIPT%%CURRICULUMspan% class="end-ignore-for-gdrive"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%

|===

[.lesson-section-2]
=== Investigate

[.lesson-instruction]
Turn to link:{pathwayrootdir}pass:[lessons/alg-distance-formula/pages/distance-scaffold.html][The Distance Between (0&#x2c; 2) and (4&#x2c; 5) (Page 54), window="_blank"] in your student workbook. Convert this expression to a Circle of Evaluation, and then to code.

Optional: Have students use this link:{pathwayrootdir}pass:[lessons/alg-distance-formula/pages/Distance-Multiple-Representations.pdf][Graphic Organizer (Page 55), window="_blank"] to model the distance formula for these coordinates with the Circles of Evaluation. +
empty%ENDCURRICULUMspan% +

[.lesson-instruction]
Using link:{pathwayrootdir}pass:[lessons/alg-distance-formula/pages/distance.html][Word Problem: distance (Page 56), window="_blank"], write a function that takes in two %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%coordinate%ENDCURRICULUMspan% pairs (four numbers) of two characters (x1, y1) and (x2, y2) and returns the distance between those two points. _HINT:_ the code you wrote in link:{pathwayrootdir}pass:[lessons/alg-distance-formula/pages/distance-scaffold.html][The Distance Between (0&#x2c; 2) and (4&#x2c; 5) (Page 54), window="_blank"] can be used to give you your first example! +
{empty} +

Students can test their `distance` function using *Pythagorean triples*, such as (3, 4, 5) or (5, 12, 13), to make sure the function is calculating the distance correctly.

Finally, students fix the broken `distance` function in their game files. When they click "Run", the right triangles will appear with proper distances for the hypotenuse.

[.lesson-section-2]
=== Common Misconceptions
It is _extremely common_ for students to put variables in the *wrong order*. In other words, their program looks like
 `...num-sqrt(num-sqr(line-length(x1,y1)) + num-sqr(line-length(x2, y2)))...` 
instead of `...num-sqrt(num-sqr(line-length(x2 - x1)) + num-sqr(line-length(y2 - y1)))...` 

In this situation, remind student to look back at what they circled and labeled in the examples step. _This is why we label!_ 

[.lesson-section-2]
=== Synthesize

[.lesson-section-1]
== Additional Exercises:



[.acknowledgment]
--
These materials were developed partly through support of the National Science Foundation, 
(awards 1042210, 1535276, 1648684, and 1738598). link:https://www.creativecommons.org/licenses/by-nc-nd/4.0/[image:{pathwayrootdir}../../lib/CCbadge.png[], window="_blank"]
Bootstrap:Algebra by Emmanuel Schanzer, Jen Poole, Ed Campos Jr, Flannery Denny, and Dorai Sitaram
is licensed under a
https://creativecommons.org/licenses/by-nc-nd/4.0/[Creative Commons 4.0 Unported License].
Based on a work at https://www.bootstrapworld.org[www.BootstrapWorld.org].
Permissions beyond the scope of this license may be available by contacting
mailto:schanzer@BootstrapWorld.org[schanzer@BootstrapWorld.org]. 
--
