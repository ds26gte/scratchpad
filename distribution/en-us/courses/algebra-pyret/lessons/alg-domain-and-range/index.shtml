<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="generator" content="Asciidoctor 2.0.10">
<title>Domain and Range</title>
<link rel="stylesheet" href="./../../../../lib/curriculum.css">
    <link rel="stylesheet" href="../../../../lib/codemirror.css" />
    <script type="text/javascript" src="../../../../lib/codemirror.js"></script>
    <script type="text/javascript" src="../../../../lib/runmode.js"></script>
    <script type="text/javascript" src="../../../../lib/scheme2.js"></script>
    <script type="text/javascript" src="../../../../lib/pyret-mode.js"></script>
    <script type="text/javascript" src="../../../../lib/bootstraplesson.js"></script>

  <script>window.___gcfg = {
  parsetags: 'explicit'
  };
  </script>
  <script src="https://apis.google.com/js/platform.js" async defer></script>
  <script>function renderSaveToDrive() {
    var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
    gapi.savetodrive.render('savetodrive-div', {
    src:(window.location.href.match(/\/$/)?(window.location.href+'index-gdrive-import.html'):(window.location.href.replace(/([^\/]+)\.([^.\/]+)$/, '$1-gdrive-import.html'))),
    filename:"Domain and Range",
    sitename:"Bootstrap, Brown University"
  });
  if(isSafari){
    var warning = document.createElement("div");
    warning.id = "safariWarning";
    warning.innerHTML = "You appear to be using Safari, which interferes with Google's Save-to-Drive button. You can fix it by going to Preferences, clicking 'Privacy', and making sure that 'Prevent cross-site tracking' is <b>not</b> checked."
    var button = document.getElementById("savetodrive-div");
    button.parentNode.insertBefore(warning, warning.nextSibling);
  }
}
</script>
</head>
<body class="article LessonPlan pyret" onload="renderSaveToDrive()">
<!--#include virtual="/menubar.ssi"-->
<!-- Analytics -->
<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-46088504-1', 'bootstrapworld.org');
ga('send', 'pageview');

</script>
<div id="body" onload="renderSaveToDrive()">
<div id="header">
<h1>Domain and Range</h1>

  <div id="savetodrive-div"></div>

</div>
<div id="content">
<div id="preamble_disabled">
<div class="sectionbody">
<div class="paragraph">
<p><span class="other-proglang"><a href="../../../algebra-wescheme/lessons/alg-domain-and-range/index.shtml">(Also available for WeScheme)</a></span></p>
</div>
<div class="paragraph">
<p>Students encounter String and Image datatypes and use "contracts" to make sense of the domain and range of functions.</p>
</div>
<table class="tableblock frame-all grid-all stripes-none stretch left-header preamble">
<colgroup>
<col style="width: 20%;">
<col style="width: 80%;">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Prerequisites</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p><a href="../../lessons/alg-order-of-operations/index.shtml">Order of Operations</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><script>
function showStandardsAlignment() {
  const selectTag = document.getElementsByClassName('standardsAlignmentSelect')[0];
  const options = selectTag && selectTag.options;
  const stdTables = document.getElementsByClassName('alignedStandards');
  const intro = document.getElementsByClassName('alignedStandardsIntro')[0];
  let introNeeded = true;
  for (let i = 0; i < stdTables.length; i++) {
    const stdTable = stdTables[i];
    stdTable.style.display = 'none';
  }
  for (let i = 0; i < options.length; i++) {
    const opt = options[i];
    if (opt.selected) {
      const optStd = opt.value;
      for (let j = 0; j < stdTables.length; j++) {
        const stdTable = stdTables[j];
        if (stdTable.classList.contains(optStd)) {
          stdTable.style.display = 'block';
          introNeeded = false;
        }
      }
    }
  }
  intro.style.display = introNeeded ? 'block' : 'none';
}
</script>
<div class="paragraph">
<p>Relevant Standards<select class="standardsAlignmentSelect"  multiple onchange="showStandardsAlignment()" style="height: 150px"><option value="standards-OK">OK</option><option value="standards-CC-Math">CC-Math</option></select></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph alignedStandardsIntro">
<p><em>Select one or more standards from the menu on the left (âŒ˜-click on Mac, Ctrl-click elsewhere).</em></p>
</div>
<div class="dlist alignedStandards standards-CC-Math standards-hierarchical-table">
<div class="title">Common Core Math Standards</div>
<dl>
<dt class="hdlist1">8.F.A.1</dt>
<dd>
<p>Understand that a function is a rule that assigns to each input exactly one output. The graph of a function is the set of ordered pairs consisting of an input and the corresponding output.</p>
</dd>
<dt class="hdlist1">HSF.IF.A.1</dt>
<dd>
<p>Understand that a function from one set (called the domain) to another set (called the range) assigns to each element of the domain exactly one element of the range. If f is a function and x is an element of its domain, then f(x) denotes the output of f corresponding to the input x. The graph of f is the graph of the equation y = f(x).</p>
</dd>
</dl>
</div>
<div class="dlist alignedStandards standards-OK standards-hierarchical-table">
<div class="title">Oklahoma Standards</div>
<dl>
<dt class="hdlist1">OK.PA.A.1.1</dt>
<dd>
<p>Recognize that a function is a relationship between an independent variable and a dependent variable in which the value of the independent variable determines the value of the dependent variable.</p>
</dd>
</dl>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Lesson Goals</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Students will be able to:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Demonstrate understanding of <span class="vocab">Domain</span> and <span class="vocab">Range</span> and how they relate to <span class="vocab">functions</span></p>
</li>
</ul>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Student-facing Goals</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="ulist">
<ul>
<li>
<p>I can identify the domain and range of a function.</p>
</li>
<li>
<p>I can identify the data types <span class="vocab">Number</span>, <span class="vocab">String</span>, and <span class="vocab">Image</span></p>
</li>
</ul>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Materials</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="ulist">
<ul>
<li>
<p>Lesson slides template (<a href="https://docs.google.com/presentation/d/1t765w-UJAHFCzvkE1YRYgHHBQ0MzegUUKKDtkxdY8KI/edit?usp=sharing" target="_blank" rel="noopener">Google Slides</a>)</p>
</li>
<li>
<p>Exploring Image Functions (<a href="../../lessons/alg-domain-and-range/pages/exploring-image-functions.html" target="_blank" rel="noopener">original (Page 17)</a>, <a href="solution-pages/exploring-image-functions.html" target="_blank" rel="noopener">solutions</a>)</p>
</li>
<li>
<p>Reading for Domain and Range (<a href="../../lessons/alg-domain-and-range/pages/reading-for-domain-and-range.html" target="_blank" rel="noopener">original (Page 18)</a>, <a href="solution-pages/reading-for-domain-and-range.html" target="_blank" rel="noopener">solution</a>)</p>
</li>
</ul>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Preparation</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="ulist">
<ul>
<li>
<p>Make sure all materials have been gathered</p>
</li>
<li>
<p>Decide how students will be grouped in pairs</p>
</li>
</ul>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Supplemental Resources</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="ulist">
<ul>
<li>
<p>Contracts Review #1 (<a href="https://quizizz.com/admin/quiz/5d69763f62e850001a0b0433" target="_blank" rel="noopener">Quizizz</a>)</p>
</li>
</ul>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Key Points For The Facilitator</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="ulist">
<ul>
<li>
<p>Check frequently for understanding of <span class="vocab">data types</span> and <span class="vocab">contract</span>s during this lesson and throughout subsequent lessons.</p>
</li>
<li>
<p>Students will use their Contracts page frequently, so it should be kept in an accessible, convenient location.</p>
</li>
</ul>
</div></div></td>
</tr>
</tbody>
</table>
<div class="paragraph old-materials">
<p>For a textbook-like version of materials similar to these, you may wish to see the <a href="https://www.bootstrapworld.org/materials/spring2020/courses/algebra/en-us/units/unit2/index.html" target="_blank" rel="noopener">prior unit-based version</a>.</p>
</div>
<div class="dlist glossary">
<div class="title">Glossary</div>
<dl>
<dt class="hdlist1">contract</dt>
<dd>
<p>a statement of the name, domain, and range of a function</p>
</dd>
<dt class="hdlist1">datatypes</dt>
<dd>
<p>a way of classifying values, such as: Number, String, Image, Boolean, or any user-defined data structure</p>
</dd>
<dt class="hdlist1">definitions area</dt>
<dd>
<p>the left-most text box in the Editor where definitions for values and functions are written</p>
</dd>
<dt class="hdlist1">domain</dt>
<dd>
<p>the type or set of inputs that a function expects</p>
</dd>
<dt class="hdlist1">error message</dt>
<dd>
<p>information from the computer about errors in code</p>
</dd>
<dt class="hdlist1">function</dt>
<dd>
<p>a mathematical object that consumes inputs and produces an output</p>
</dd>
<dt class="hdlist1">Image</dt>
<dd>
<p>a type of data for pictures</p>
</dd>
<dt class="hdlist1">Number</dt>
<dd>
<p>a data type representing a real number</p>
</dd>
<dt class="hdlist1">range</dt>
<dd>
<p>the type or set of outputs that a function produces</p>
</dd>
<dt class="hdlist1">String</dt>
<dd>
<p>a data type for any sequence of characters between quotation marks (examples: "hello", "42", "this is a string!")</p>
</dd>
</dl>
</div>
</div>
</div>
<div class="sect1 lesson-section-1">
<h2 id="_warmup"><span class="section-link"><a href="#_warmup"><span class="section-link-symbol">&#128279;</span></a></span>Warmup</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Students should open <a href="https://code.Pyret.org" target="_blank" rel="noopener">code.pyret.org (CPO)</a> in their browser, and click "Sign In". This will ask them to log in with a valid Google account (Gmail, Google Classroom, YouTube, etc.), and then show them the "Programs" page. This page is empty - they don&#8217;t have any programs yet! Have them click "Open Editor".</p>
</div>
<div class="paragraph">
<p>They will also want to have their <a href="../../back-matter/pages/contracts-1.html" target="_blank" rel="noopener">Contracts page (back of workbook)</a> ready, preferably in paper form.</p>
</div>
</div>
</div>
<div class="sect1 lesson-section-1">
<h2 id="_contracts_duration_15_minutes_"><span class="section-link"><a href="#_contracts_duration_15_minutes_"><span class="section-link-symbol">&#128279;</span></a></span>Contracts <span class="duration">15 minutes</span></h2>
<div class="sectionbody">
<div class="sect2 lesson-section-2">
<h3 id="_overview">Overview</h3>
<div class="paragraph">
<p>This activity introduces the notion of <span class="vocab">Contracts</span>, which are a simple notation for keeping track of the set all of possible inputs and outputs for a function. They are also closely related to the concept of a <em>function machine</em>, which is introduced as well. <em>Note: Contracts are based on the same notation found in Algebra!</em></p>
</div>
</div>
<div class="sect2 lesson-section-2">
<h3 id="_launch">Launch</h3>
<div class="paragraph lesson-point">
<p>For each input to a function, there is exactly one output</p>
</div>
<div class="paragraph">
<p><span class="right"> <span class="tooltip"><span class="tooltiptext">Source: Wikipedia</span>
<span class="image"><img src="../../lessons/alg-domain-and-range/images/VerticalLineTest.png" alt="Source: Wikipedia" width="250"></span><a href="images/VerticalLineTest.png" class="gdrive-only"><span class="big">&#x1f5bc;</span>Show image</a></span> </span>
Functions are a lot like machines: values go in, something happens, and new values come out. Let&#8217;s start with an example of a function we all know: adding two numbers! Addition is like a machine that takes in pairs of numbers and produces a sum.</p>
</div>
<div class="paragraph">
<p>Consider the graphs on the right: for every input on the x-axis, a function will produce a <em>single</em> output. If we draw a vertical line and it hits the graph more than once, it means there is <em>more than one output</em> for the same input. Like any good machine, function machines must be <strong>reliable</strong>.</p>
</div>
<div class="paragraph">
<p>Whenever we use any machine, we always think about what goes in and what comes out. A coffee maker takes in coffee beans and water, and produces coffee. A toaster takes in bread and produces toast. We don&#8217;t have to know exactly how coffee makers or toasters work in order to <em>use</em> them. All we need to know is what type of thing goes in and what type of thing should come out!</p>
</div>
<div class="paragraph">
<p>In our coffee-maker example, we expect to get the exact same coffee out if we use the exact same beans and water each time. If you put bread in a toaster and got a bagel out, you&#8217;d be pretty surprised! <em>Functions work the same way:</em>  no matter how many times you plug in the same number, you will <em>always</em> get the same result. And if you don&#8217;t? <strong>It&#8217;s not a function!</strong></p>
</div>
</div>
</div>
</div>
<div class="sect1 lesson-section-1">
<h2 id="_investigate"><span class="section-link"><a href="#_investigate"><span class="section-link-symbol">&#128279;</span></a></span>Investigate</h2>
<div class="sectionbody">
<div class="paragraph">
<p>We use something called a <span class="vocab">Contract</span> to keep track of what goes in and out of these machines called functions. Contracts are like a "cheat sheet" for using functions. Once you know how to read one, you can quickly figure out how to use a function just by looking at its contract!</p>
</div>
<div class="paragraph">
<p><span class="clear"></p>
</div>
<div class="paragraph lesson-point">
<p>The Contract for a function has three parts: the Name of the function, the <span class="vocab">Domain</span>, and the <span class="vocab">Range</span></p>
</div>
<div class="ulist">
<ul>
<li>
<p>The Name is simply how we refer to the function:
<code><tt class="pyret">num-sqrt</tt></code>, <code><tt class="pyret">num-sqr</tt></code>, etc.</p>
</li>
<li>
<p>The <span class="vocab">Domain</span> tells us what the function "takes in", or <em>consumes</em>. These are also known as the <em>arguments</em> to the function.</p>
</li>
<li>
<p>The <span class="vocab">Range</span> tells us what the function "gives back", <em>produces</em>.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Memorizing contracts is hard, and why memorize when we can just keep a log of them! Let&#8217;s write them down so we can use them later! At the back of your workbook, you&#8217;ll find pages with space to write down every contract you see in the course.</p>
</div>
<div class="ulist lesson-instruction">
<ul>
<li>
<p>What does Multiplication need as an input? What does it produce?</p>
</li>
<li>
<p>What inputs does the Square Root function consume? What does it produce?</p>
</li>
<li>
<p>When we Square something, what does the Square function consume and produce?</p>
</li>
<li>
<p>Write the contracts for <code><tt class="pyret">num-sqr</tt></code>, and <code><tt class="pyret">num-sqrt</tt></code> into the Contracts page.</p>
</li>
</ul>
</div>
<div class="paragraph text-center">
<p><strong>A Sample Contracts Table</strong></p>
</div>
<style>
.inlineContractTable width: 60%; margin: auto;</span>
.inlineContractTable tbody .tableblock{ padding: 0px; margin: 0px; }
</style>
<table class="tableblock frame-all grid-rows stretch inlineContractTable">
<colgroup>
<col style="width: 22.2222%;">
<col style="width: 5.5555%;">
<col style="width: 55.5555%;">
<col style="width: 5.5555%;">
<col style="width: 11.1113%;">
</colgroup>
<thead>
<tr>
<th class="tableblock halign-left valign-top">Name</th>
<th class="tableblock halign-left valign-top"></th>
<th class="tableblock halign-left valign-top">Domain</th>
<th class="tableblock halign-left valign-top"></th>
<th class="tableblock halign-left valign-top">Range</th>
</tr>
</thead>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code><tt class="pyret">#</tt></code> <code><tt class="pyret">+</tt></code></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">::</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code><tt class="pyret">Number Number</tt></code></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">-&gt;</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code><tt class="pyret">Number</tt></code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code><tt class="pyret">#</tt></code> <code><tt class="pyret">-</tt></code></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">::</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code><tt class="pyret">Number Number</tt></code></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">-&gt;</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code><tt class="pyret">Number</tt></code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code><tt class="pyret">#</tt></code> <code><tt class="pyret">num-sqr</tt></code></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">::</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code><tt class="pyret">Number</tt></code></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">-&gt;</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code><tt class="pyret">Number</tt></code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code><tt class="pyret">#</tt></code> <code><tt class="pyret">num-sqrt</tt></code></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">::</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code><tt class="pyret">Number</tt></code></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">-&gt;</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code><tt class="pyret">Number</tt></code></p></td>
</tr>
</tbody>
</table>
<div class="paragraph">
<p>It would be silly to buy a coffee-maker that only works with one specific coffee! Similarly, Contracts don&#8217;t tell us <em>specific</em> inputs. They tell us the <em><span class="vocab">Datatype</span></em> of input a function needs. For example, a Contract wouldn&#8217;t say that addition requires "3 and 4". Addition works on more than just those two inputs! Instead, it would tells us that addition requires "two Numbers".  When we <em>use</em> a Contract, we plug specific numbers into a mathematical expression.</p>
</div>
<div class="paragraph lesson-point">
<p>Contracts are general. Expressions are specific.</p>
</div>
<div class="paragraph lesson-instruction">
<p><strong>Optional:</strong> Have students make a <a href="../../lessons/alg-domain-and-range/pages/frayer-model.pdf" target="_blank" rel="noopener">Domain and Range Frayer model</a> and use the visual organizer to explain the concepts of Domain and Range in their own words.</p>
</div>
<div class="sect2 lesson-section-2">
<h3 id="_synthesize">Synthesize</h3>
<div class="ulist">
<ul>
<li>
<p>What is wrong with the contract
<code><tt class="pyret"># + : 3 4 -&gt; 7</tt></code>?</p>
</li>
<li>
<p>What is the difference between a value like <code><tt class="pyret">17</tt></code> and a type like <code><tt class="pyret">Number</tt></code>?</p>
</li>
</ul>
</div>
</div>
</div>
</div>
<div class="sect1 lesson-section-1">
<h2 id="_exploring_image_functions_duration_25_minutes_"><span class="section-link"><a href="#_exploring_image_functions_duration_25_minutes_"><span class="section-link-symbol">&#128279;</span></a></span>Exploring Image Functions <span class="duration">25 minutes</span></h2>
<div class="sectionbody">
<div class="sect2 lesson-section-2">
<h3 id="_overview_2">Overview</h3>
<div class="paragraph">
<p>Students explore functions that go beyond numbers, producing all sorts of simple geometric shapes and images in the process. Making images is highly motivating, and encourages students to get better at both reading error messages and persisting in catching bugs.</p>
</div>
</div>
<div class="sect2 lesson-section-2">
<h3 id="_launch_2">Launch</h3>
<div class="paragraph">
<p>Students have already seen <code><tt class="pyret">Number</tt></code> values like <code><tt class="pyret">42</tt></code>,<code><tt class="pyret">-91</tt></code>, <code><tt class="pyret">1/4</tt></code> or <code><tt class="pyret">0.25</tt></code>, but computer programs can work with a much larger set of <span class="vocab">datatypes</span>. Show students examples of the <code><tt class="pyret">String</tt></code> datatype, by having them type various things in quotation marks:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code><tt class="pyret">"hello"</tt></code></p>
</li>
<li>
<p><code><tt class="pyret">"many words, one string"</tt></code></p>
</li>
<li>
<p><code><tt class="pyret">"42"</tt></code></p>
</li>
<li>
<p><code><tt class="pyret">"1/3"</tt></code></p>
</li>
<li>
<p>Something students come up with on their own&#8230;&#8203;</p>
</li>
</ul>
</div>
<div class="paragraph lesson-point">
<p>A String is <em>anything</em> in quotation marks. Like Number values, String values evaluate to themselves.</p>
</div>
<div class="paragraph lesson-instruction">
<p>Here are two Circles of Evaluation. One of them is familiar, but the other very different from what you&#8217;ve seen before. What&#8217;s different about the Circle on the right?</p>
</div>
<table class="tableblock frame-none grid-none stretch">
<colgroup>
<col style="width: 50%;">
<col style="width: 50%;">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><span class="right"><table class="gdrive-only expression"><tr><td class="operator"><span class="operator"><span class="value wescheme-symbol">&#8203;*</span></span></td></tr><tr><td><table class="args"><tr><td class="arg"><span class="value wescheme-number">10</span></td><td class="arg"><span class="value wescheme-number">-4</span></td></tr></table></td></tr></table><div class="circleevalsexp"><span class="expression"><span class="lParen">(</span><span class="operator"><span class="value wescheme-symbol">&#8203;*</span></span><span class="hspace">&#160;</span><span class="value wescheme-number">10</span><span class="hspace">&#160;</span><span class="value wescheme-number">-4</span><span class="rParen">)</span></span></div></span></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><table class="gdrive-only expression"><tr><td class="operator"><span class="operator"><span class="value wescheme-symbol">star</span></span></td></tr><tr><td><table class="args"><tr><td class="arg"><span class="value wescheme-number">50</span></td><td class="arg"><span class="value wescheme-string">"solid"</span></td><td class="arg"><span class="value wescheme-string">"blue"</span></td></tr></table></td></tr></table><div class="circleevalsexp"><span class="expression"><span class="lParen">(</span><span class="operator"><span class="value wescheme-symbol">star</span></span><span class="hspace">&#160;</span><span class="value wescheme-number">50</span><span class="hspace">&#160;</span><span class="value wescheme-string">"solid"</span><span class="hspace">&#160;</span><span class="value wescheme-string">"blue"</span><span class="rParen">)</span></span></div></p></td>
</tr>
</tbody>
</table>
<div class="paragraph">
<p>Possible responses:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>We&#8217;ve never seen the function <code><tt class="pyret">star</tt></code> before</p>
</li>
<li>
<p>We&#8217;ve never seen Strings used in a Circle of Evaluation before</p>
</li>
<li>
<p>We&#8217;ve never seen a function take in three inputs</p>
</li>
<li>
<p>We&#8217;ve never seen a function take in a mix of Numbers and Strings</p>
</li>
</ul>
</div>
<div class="paragraph lesson-instruction">
<p>Can you figure out the Name and <span class="vocab">Domain</span> for the function in the second Circle? This is a chance to look for and make use of structure in deciphering a novel expression!</p>
</div>
<div class="paragraph">
<p>Possible responses:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>We know the name of the function is <code><tt class="pyret">star</tt></code>, because that&#8217;s what is at the top of the circle</p>
</li>
<li>
<p>We know it has three things in its Domain</p>
</li>
<li>
<p>We know the Domain consists of a Number and two Strings</p>
</li>
</ul>
</div>
<div class="ulist lesson-instruction">
<ul>
<li>
<p>But what about the <span class="vocab">Range</span>? What do you think this expression will evaluate to?</p>
</li>
<li>
<p>Convert this Circle to code and try out!</p>
</li>
<li>
<p>What does the <code><tt class="pyret">50</tt></code> mean to the computer? Try replacing it with different values, and see what you get.</p>
</li>
<li>
<p>What does the <code><tt class="pyret">"blue"</tt></code> mean to the computer? Try replacing it with different values, and see what you get.</p>
</li>
<li>
<p>What does the <code><tt class="pyret">"solid"</tt></code> mean to the computer? Try replacing it with different values, and see what you get. <strong>If you get an error, read it!</strong> It just might give you a hint about what to do&#8230;&#8203;</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>You&#8217;ve seen two <span class="vocab">datatypes</span> already: Numbers and Strings. Did we get back either on of those? The <span class="vocab">Range</span> of <code><tt class="pyret">star</tt></code> is a datatype we haven&#8217;t seen before: an <code><tt class="pyret">Image</tt></code>!</p>
</div>
<table class="tableblock frame-all grid-none stripes-none stretch strategy-box">
<colgroup>
<col style="width: 100%;">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><span class="title">Error Messages</span></p>
<p class="tableblock">The error messages in this environment are <em>designed</em> to be as student-friendly as possible. Encourage students to read these messages aloud to one another, and ask them what they think the error message <em>means</em>. By explicitly drawing their attention to errors, you will be setting them up to be more independent in the next activity!</p></td>
</tr>
</tbody>
</table>
<div class="paragraph">
<p>Suppose we had never seen <code><tt class="pyret">star</tt></code> before. How could we figure out how to use it, using the helpful error messages?</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Type <code><tt class="pyret">star</tt></code> into the Interactions Area and hit "Enter". What did you get back? What does that mean? <em>There is something called "star", and the computer knows it&#8217;s a function!</em></p>
</li>
<li>
<p>If it&#8217;s a function, we know that it will need an open parentheses and at least one input. Have students try  <code><tt class="pyret">star(50)</tt></code></p>
</li>
<li>
<p>What error did we get? What <em>hint</em> does it give us about how to use this function?</p>
</li>
</ul>
</div>
</div>
<div class="sect2 lesson-section-2">
<h3 id="_investigate_2">Investigate</h3>
<div class="ulist lesson-instruction">
<ul>
<li>
<p>Have students turn to <a href="../../lessons/alg-domain-and-range/pages/exploring-image-functions.html" target="_blank" rel="noopener">Exploring Image Functions (Page 17)</a> in the workbook.</p>
</li>
<li>
<p>Have students open a new program file and name it "Exploring Images".</p>
</li>
<li>
<p>On Line 1 of the <span class="vocab">Definitions area</span> (left side), type the words <strong>include image</strong> and press "Run". (This loads the <strong>image</strong> library.)</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Give students time to investigate image functions and see how many they can discover, using the Contracts page to organize their findings.</p>
</div>
<table class="tableblock frame-all grid-none stripes-none stretch strategy-box">
<colgroup>
<col style="width: 100%;">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><span class="title">Strategies for English Language Learners</span></p>
<p class="tableblock">MLR 2 - Collect and Display: As students explore, walk the room and record student language relating to functions, domain, range, contracts, or what they perceive from <span class="vocab">error messages</span>.  This output can be used for a concept map, which can be updated and built upon, bridging student language with disciplinary language while increasing sense-making.</p></td>
</tr>
</tbody>
</table>
</div>
<div class="sect2 lesson-section-2">
<h3 id="_synthesize_2">Synthesize</h3>
<div class="ulist">
<ul>
<li>
<p><strong>What image functions did you and your partner discover?</strong>
<code><tt class="pyret">rectangle</tt></code>, <code><tt class="pyret">triangle</tt></code>, <code><tt class="pyret">ellipse</tt></code>, <code><tt class="pyret">circle</tt></code>, etc.</p>
</li>
<li>
<p><strong>How did you decide what to try?</strong></p>
</li>
<li>
<p><strong>What error messages did you see?</strong>
<em>Input mismatches, missing parentheses, etc.</em></p>
</li>
<li>
<p><strong>How did you figure out what to do after seeing an error message?</strong>
<em>Read the error message, think about what the computer is trying to tell us, etc.</em></p>
</li>
</ul>
</div>
</div>
</div>
</div>
<div class="sect1 lesson-section-1">
<h2 id="_making_sense_of_contracts_duration_10_minutes_"><span class="section-link"><a href="#_making_sense_of_contracts_duration_10_minutes_"><span class="section-link-symbol">&#128279;</span></a></span>Making Sense of Contracts <span class="duration">10 minutes</span></h2>
<div class="sectionbody">
<div class="sect2 lesson-section-2">
<h3 id="_overview_3">Overview</h3>
<div class="paragraph">
<p>This activity digs deeper into Contracts, and has students create their own Contracts trackers to take ownership of the concept and create an artifact they can refer back to.</p>
</div>
</div>
<div class="sect2 lesson-section-2">
<h3 id="_launch_3">Launch</h3>
<div class="paragraph">
<p><code><tt class="pyret">star</tt></code> has three elements in its Domain: A Number, a String, and another String.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>What do these elements represent?</strong>
<em>The Number is the radius, the first String is the style (either <code><tt class="pyret">outline</tt></code> or <code><tt class="pyret">solid</tt></code>), the second String is the color.</em></p>
</li>
<li>
<p><strong>What happens if I don&#8217;t give it those things?</strong>
<em>We won&#8217;t get the star we want, we&#8217;ll probably get an error!</em></p>
</li>
<li>
<p><strong>If I give <code><tt class="pyret">star</tt></code> what it needs, what do I get in return?</strong>
<em>An Image of the star that matches the arguments</em></p>
</li>
<li>
<p><strong><code><tt class="pyret">square</tt></code> has the same Domain as <code><tt class="pyret">star</tt></code>.  What do the arguments in <code><tt class="pyret">square</tt></code> represent?</strong>
<em>length, style, color</em></p>
</li>
<li>
<p><strong>Can different functions have the same Domain?  The same Range?  Are they still different functions?</strong>
<em>Yes, yes, and yes!</em></p>
</li>
<li>
<p><strong>Can we come up with an example of two math functions that have the same Domain and Range?</strong></p>
</li>
</ul>
</div>
<div class="paragraph lesson-point">
<p>When the input matches what the function consumes, the function produces the output we expect.</p>
</div>
<div class="paragraph">
<p><strong>Where else have you heard the word "contract"?  How can you connect that meaning to contracts in programming?</strong></p>
</div>
<div class="paragraph">
<p><em>An actor signs a contract agreeing to perform in a film in exchange for compensation, a contractor makes an agreement with a homeowner to build or repair something in a set amount of time for compensation, or a parent agrees to pizza for dinner in exchange for the child completing their chores. Similarly, a contract in programming is an <strong>agreement</strong> between what the function is given and what it produces.</em></p>
</div>
</div>
<div class="sect2 lesson-section-2">
<h3 id="_investigate_3">Investigate</h3>
<div class="ulist lesson-instruction">
<ul>
<li>
<p>Students complete <a href="../../lessons/alg-domain-and-range/pages/reading-for-domain-and-range.html" target="_blank" rel="noopener">Reading for Domain and Range (Page 18)</a> with their partner.</p>
</li>
</ul>
</div>
<div class="paragraph lesson-instruction">
<p>Students create a visual "Contracts page" either digitally or physically.  Ask students to think about how they visualize contracts in their own minds and how they could use that imagery to explain functions and their contracts to others.</p>
</div>
</div>
</div>
</div>
<div class="sect1 lesson-section-1">
<h2 id="_additional_exercises"><span class="section-link"><a href="#_additional_exercises"><span class="section-link-symbol">&#128279;</span></a></span>Additional Exercises:</h2>
<div class="sectionbody">
<div class="openblock acknowledgment">
<div class="content">
<div class="paragraph">
<p>These materials were developed partly through support of the National Science Foundation,
(awards 1042210, 1535276, 1648684, and 1738598). <a href="https://www.creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener"><span class="image"><img src="../../../../lib/CCbadge.png" alt="CCbadge"></span></a>
Bootstrap:Algebra by Emmanuel Schanzer, Jen Poole, Ed Campos Jr, Flannery Denny, and Dorai Sitaram
is licensed under a
<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons 4.0 Unported License</a>.
Based on a work at <a href="https://www.bootstrapworld.org">www.BootstrapWorld.org</a>.
Permissions beyond the scope of this license may be available by contacting
<a href="mailto:schanzer@BootstrapWorld.org">schanzer@BootstrapWorld.org</a>.</p>
</div>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footer-text">
Last updated 2020-08-19 20:23:47 -0400
</div>
</div>
</div>
</body>
</html>