[.pyret]
= Introduction to Programming in Pyret

%CURRICULUMspan% class="web-page-only"%BEGINCURRICULUMspan%Referenced from lesson link:{pathwayrootdir}lessons/ds-pyret-intro/index.shtml[Starting to Program]

%ENDCURRICULUMspan%
*Programming languages* involve different _datatypes_, such as Numbers, Strings, and Booleans. 

	- Numbers are values like `1`, `0.4`, `1/3`, and `-8261.003`. 
	
	** Numbers are _usually_  used for quantitative data and other values are _usually_  used as categorical data.
	
	** In Pyret, any decimal _must_  start with a 0. `0.22` is valid, but `.22` is not.
	
	- Strings are values like `"Emma"`, `"Rosanna"`, `"Jen and Ed"`, or even `"08/28/1980"`.
	
	** In Pyret, all strings _must_ be surrounded in quotation marks.
	
	- Booleans are either `true` or `false`.

%CURRICULUMspan% class="vspace" style="height: 1ex"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%

*Operators* (like `+`, `-`, `*`, `<`, etc.) work the same way in Pyret that they do in math. 

	- Operators are written between values, for example: `4 + 2`. 

	- In Pyret, operators must always have a space around them. `4 + 2` is valid, but `4+2` is not.
	
	- If an expression has different operators, parentheses must be used to show order of operations. `4 + 2 + 6` and `4 + (2 * 6)` are valid, but `4 + 2 * 6` is not.

%CURRICULUMspan% class="vspace" style="height: 1ex"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%

*Applying Functions* also works the way it does in math. The function name is first, followed by a list of *arguments* in parentheses.

	- In math this could look like `f(5)` or `f(g(10, 4))`.
	- In Pyret this could look like `star(50, "solid", "red")`.
	- There are many other Pyret functions, for example `num-sqr`, `num-sqrt` `triangle`, `star`, `string-repeat`, etc.  

%CURRICULUMspan% class="vspace" style="height: 1ex"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%

Functions have *contracts*, which help explain how a function should be used. Every contract has three parts:

	- The _Name_ of the function - literally, what it's called.
	- The _Domain_ of the function - what  _types of values_ the function consumes, and in what order.
	- The _Range_ of the function - what  _type of value_ the function produces.

%CURRICULUMspan% class="vspace" style="height: 1ex"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%

*Value Definitions* (like `x = 4`, or `y = 9 + 6`) also work the way they do in math. Every value definition starts with a _name_, followed by an equals sign, and then an expression. Once a value is defined, it can be refered to by name.

[.acknowledgment]
--
These materials were developed partly through support of the National Science Foundation, 
(awards 1042210, 1535276, 1648684, and 1738598). link:https://www.creativecommons.org/licenses/by-nc-nd/4.0/[image:{pathwayrootdir}../../lib/CCbadge.png[], window="_blank"]
Bootstrap:Data Science by Emmanuel Schanzer, Nancy Pfenning, Emma Youndtsmith, Jennifer Poole, Shriram Krishnamurthi, Joe Politz, Ben Lerner, Flannery Denny, and Dorai Sitaram with help from Eric Allatta and Joy Straub
is licensed under a
https://creativecommons.org/licenses/by-nc-nd/4.0/[Creative Commons 4.0 Unported License].
Based on a work at https://www.bootstrapworld.org[www.BootstrapWorld.org].
Permissions beyond the scope of this license may be available by contacting
mailto:schanzer@BootstrapWorld.org[schanzer@BootstrapWorld.org]. 
--
