
[.alignedStandardsIntro]
_Select one or more standards from the menu on the left (⌘-click on Mac, Ctrl-click elsewhere)._


[.alignedStandards.standards-CSTA]
.CSTA Standards
[.standards-hierarchical-table]
2-AP-17:: Systematically test and refine programs using a range of test cases
3B-AP-21:: Develop and use a series of test cases to verify that a program performs according to its design specifications.



[.alignedStandards.standards-K12CS]
.K-12CS Standards
[.standards-hierarchical-table]
6-8.Computing Systems.Troubleshooting:: Comprehensive troubleshooting requires knowledge of how computing devices and components work and interact. A systematic process will identify the source of a problem, whether within a device or in a larger system of connected devices.
9-12.Computing Systems.Troubleshooting:: Troubleshooting complex problems involves the use of multiple sources when researching, evaluating, and implementing potential solutions. Troubleshooting also relies on experience, such as when people recognize that a problem is similar to one they have seen before or adapt solutions that have worked in the past.
P6:: Testing and Refining Computational Artifacts



[.alignedStandards.standards-NGSS]
.Next-Gen Science Standards
[.standards-hierarchical-table]
HS-SEP5-4:: Use simple limit cases to test mathematical expressions, computer programs, algorithms, or simulations of a process or system to see if a model “makes sense” by comparing the outcomes with what is known about the real world.



[.alignedStandards.standards-OK]
.Oklahoma Standards
[.standards-hierarchical-table]
OK.L1.IC.C.02:: Test and refine computational artifacts to reduce bias and equity deficits.


