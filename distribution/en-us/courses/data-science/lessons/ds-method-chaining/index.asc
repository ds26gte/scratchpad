[.LessonPlan]
[.pyret]
= Method Chaining


Students continue practicing their Design Recipe skills, making lots of simple functions dealing with the Animals Dataset. Then they learn how to chain Methods together, and define more sophisticated subsets.


[.left-header.preamble,cols="20a,80a",stripes=none]
|===

| Prerequisites | link:{pathwayrootdir}lessons/pass:[ds-defining-table-functions]/index.shtml[Defining Table Functions]

| 
++++
<script>
function showStandardsAlignment() {
  const selectTag = document.getElementsByClassName('standardsAlignmentSelect')[0];
  const options = selectTag && selectTag.options;
  const stdTables = document.getElementsByClassName('alignedStandards');
  const intro = document.getElementsByClassName('alignedStandardsIntro')[0];
  let introNeeded = true;
  for (let i = 0; i < stdTables.length; i++) {
    const stdTable = stdTables[i];
    stdTable.style.display = 'none';
  }
  for (let i = 0; i < options.length; i++) {
    const opt = options[i];
    if (opt.selected) {
      const optStd = opt.value;
      for (let j = 0; j < stdTables.length; j++) {
        const stdTable = stdTables[j];
        if (stdTable.classList.contains(optStd)) {
          stdTable.style.display = 'block';
          introNeeded = false;
        }
      }
    }
  }
  intro.style.display = introNeeded ? 'block' : 'none';
}
</script>
++++

Relevant Standards%CURRICULUMselect% class="standardsAlignmentSelect"  multiple onchange="showStandardsAlignment()" style="height: 150px"%BEGINCURRICULUMselect%%CURRICULUMoption% value="standards-OK"%BEGINCURRICULUMoption%OK%ENDCURRICULUMoption%%CURRICULUMoption% value="standards-K12CS"%BEGINCURRICULUMoption%K12CS%ENDCURRICULUMoption%%CURRICULUMoption% value="standards-CSTA"%BEGINCURRICULUMoption%CSTA%ENDCURRICULUMoption%%CURRICULUMoption% value="standards-NGSS"%BEGINCURRICULUMoption%NGSS%ENDCURRICULUMoption%%ENDCURRICULUMselect%

|

include::./pathway-standards.asc[]

| Lesson Goals
| Students will be able to...

* Use method chaining to write more sophisticated analyses using less code
* Identify bugs introduced by chaining methods in the wrong order

| Student-facing Lesson Goals
|

* Let's practice writing functions and combining methods together.

| Materials
|
* Lesson slides (link:pass:[https://docs.google.com/presentation/d/1YPbKXTTIaA8CuWr_KhG6vXLJ6u5L5IBM7cuFqMS5zy8/][Google Slides, window="_blank"])
* Computer for each student (or pair), with access to the internet
* link:{pathwayrootdir}/workbook/workbook.pdf[Student workbook], and something to write with

| Preparation
|
* Make sure all materials have been gathered
* Decide how students will be grouped in pairs
* All students should log into link:pass:[https://code.pyret.org][CPO, window="_blank"] and open the "Animals Starter File" they saved from the prior lesson. If they don't have the file, they can link:pass:[https://code.pyret.org/editor#share=1ZupMVPWvVUOM0HCWyA7cRBghSLKxPWv1][open a new one, window="_blank"]

| Supplemental Resources
|

include::xtra/lang-prereq.asc[]
|===



include::./pathway-glossary.asc[]

[.lesson-section-1]
== Design Recipe Practice %CURRICULUMspan% class="duration"%BEGINCURRICULUMspan%25 minutes%ENDCURRICULUMspan%

[.lesson-section-2]
=== Overview
Students practice more of what they learned in the previous lesson, applying the Design Recipe to simple table functions that operate on rows of the Animals Dataset. The functions they create - in addition to the ones they've already made - set up the method-chaining activity.

[.lesson-section-2]
=== Launch
The Design Recipe is a powerful tool for solving problems by writing functions. It's important for this to be like second nature, so let's get some more practice using it!

[.lesson-section-2]
=== Investigate
[.lesson-instruction]
Define the Compute functions on link:{pathwayrootdir}pass:[lessons/ds-method-chaining/pages/design-recipe-1.html][The Design Recipe (Page 32), window="_blank"] and link:{pathwayrootdir}pass:[lessons/ds-method-chaining/pages/design-recipe-2.html][The Design Recipe (Page 33), window="_blank"].

[.lesson-section-2]
=== Synthesize
Did students find themselves getting faster at using the Design Recipe? Can students share any patterns they noticed, or shortcuts they used?

[.lesson-section-1]
== Chaining Methods %CURRICULUMspan% class="duration"%BEGINCURRICULUMspan%25 minutes%ENDCURRICULUMspan%

[.lesson-section-2]
=== Overview
Students learn how to perform multiple table operations (sorting, filtering, building) in the same line of code.

[.lesson-section-2]
=== Launch
Now that we are doing more sophisticated analyses, we might find ourselves writing the following code:
----
# get a table with the nametags of all the fixed animals, ordered by species
fixed = animals-table.filter(is-fixed)
fixed-with-nametags = fixed.build-column("tag", nametag)
result = fixed-with-nametags.order-by("species", true)
----

That's a lot of code, and it also requires us to come up with names for each intermediate step! Pyret allows table methods to be _chained together_, so that we can build, filter _and_ order a Table in one shot. For example:

----
# get a table with the nametags of all the fixed animals, ordered by species
result = animals-table.build-column("label", nametag).filter(is-fixed).order-by("species", true)
----

This code takes the `animals-table`, and builds a new column. According to our Contracts Page, `.build-column` produces a new Table, and that’s the Table whose `.filter` method we use. That method produces _yet another Table_, and we call that Table’s `order-by` method. The Table that comes back from that is our final result.


[.strategy-box, cols="1", grid="none", stripes="none"]
|===
|
%CURRICULUMspan% class="title"%BEGINCURRICULUMspan%Teaching Tip%ENDCURRICULUMspan%

Use different color markers to draw _nested boxes_ around each part of the expression, showing where each Table came from.
|===

It can be difficult to read code that has lots of method calls chained together, so we can add a line-break before each “`.`” to make it more readable. Here’s the exact same code, written with each method on its own line:

----
# get a table with the nametags of all the fixed animals, order by species
animals-table
  .build-column("label", nametag)
  .filter(is-fixed)
  .order-by("species", true)
----

[.lesson-point]
Order matters: Build, Filter, Order.

Suppose we want to build a column and then use it to filter our table. If we use the methods in the wrong order (trying to filter by a column that doesn’t exist yet), we might wind up crashing the program. Even worse, the program might work, but produce results that are incorrect!

[.lesson-section-2]
=== Investigate
[.lesson-point]
When chaining methods, it’s important to build first, then filter, and then order.

How well do you know your table methods? Complete link:{pathwayrootdir}pass:[lessons/ds-method-chaining/pages/chaining-methods.html][Chaining Methods (Page 34), window="_blank"] and link:{pathwayrootdir}pass:[lessons/ds-method-chaining/pages/chaining-methods-order-matters.html][Chaining Methods 2: Order Matters! (Page 35), window="_blank"] in your Student Workbook to find out.

[.lesson-section-2]
=== Synthesize
As our analysis gets more complex, method chaining is a great way to keep the code simple. But complex analysis also has more room for mistakes, so it’s critical to think carefully when we use it!


[.acknowledgment]
--
These materials were developed partly through support of the National Science Foundation, 
(awards 1042210, 1535276, 1648684, and 1738598). link:https://www.creativecommons.org/licenses/by-nc-nd/4.0/[image:{pathwayrootdir}../../lib/CCbadge.png[], window="_blank"]
Bootstrap:Data Science by Emmanuel Schanzer, Nancy Pfenning, Emma Youndtsmith, Jennifer Poole, Shriram Krishnamurthi, Joe Politz, Ben Lerner, Flannery Denny, and Dorai Sitaram with help from Eric Allatta and Joy Straub
is licensed under a
https://creativecommons.org/licenses/by-nc-nd/4.0/[Creative Commons 4.0 Unported License].
Based on a work at https://www.bootstrapworld.org[www.BootstrapWorld.org].
Permissions beyond the scope of this license may be available by contacting
mailto:schanzer@BootstrapWorld.org[schanzer@BootstrapWorld.org]. 
--
