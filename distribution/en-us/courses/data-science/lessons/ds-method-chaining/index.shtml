<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="generator" content="Asciidoctor 2.0.10">
<title>Method Chaining</title>
<link rel="stylesheet" href="./../../../../lib/curriculum.css">
    <link rel="stylesheet" href="../../../../lib/codemirror.css" />
    <script type="text/javascript" src="../../../../lib/codemirror.js"></script>
    <script type="text/javascript" src="../../../../lib/runmode.js"></script>
    <script type="text/javascript" src="../../../../lib/scheme2.js"></script>
    <script type="text/javascript" src="../../../../lib/pyret-mode.js"></script>
    <script type="text/javascript" src="../../../../lib/bootstraplesson.js"></script>

  <script>window.___gcfg = {
  parsetags: 'explicit'
  };
  </script>
  <script src="https://apis.google.com/js/platform.js" async defer></script>
  <script>function renderSaveToDrive() {
    var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
    gapi.savetodrive.render('savetodrive-div', {
    src:(window.location.href.match(/\/$/)?(window.location.href+'index-gdrive-import.html'):(window.location.href.replace(/([^\/]+)\.([^.\/]+)$/, '$1-gdrive-import.html'))),
    filename:"Method Chaining",
    sitename:"Bootstrap, Brown University"
  });
  if(isSafari){
    var warning = document.createElement("div");
    warning.id = "safariWarning";
    warning.innerHTML = "You appear to be using Safari, which interferes with Google's Save-to-Drive button. You can fix it by going to Preferences, clicking 'Privacy', and making sure that 'Prevent cross-site tracking' is <b>not</b> checked."
    var button = document.getElementById("savetodrive-div");
    button.parentNode.insertBefore(warning, warning.nextSibling);
  }
}
</script>
</head>
<body class="article LessonPlan pyret" onload="renderSaveToDrive()">
<!--#include virtual="/menubar.ssi"-->
<!-- Analytics -->
<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-46088504-1', 'bootstrapworld.org');
ga('send', 'pageview');

</script>
<div id="body" onload="renderSaveToDrive()">
<div id="header">
<h1>Method Chaining</h1>

  <div id="savetodrive-div"></div>

</div>
<div id="content">
<div id="preamble_disabled">
<div class="sectionbody">
<div class="paragraph">
<p>Students continue practicing their Design Recipe skills, making lots of simple functions dealing with the Animals Dataset. Then they learn how to chain Methods together, and define more sophisticated subsets.</p>
</div>
<table class="tableblock frame-all grid-all stripes-none stretch left-header preamble">
<colgroup>
<col style="width: 20%;">
<col style="width: 80%;">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Prerequisites</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p><a href="../../lessons/ds-defining-table-functions/index.shtml">Defining Table Functions</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><script>
function showStandardsAlignment() {
  const selectTag = document.getElementsByClassName('standardsAlignmentSelect')[0];
  const options = selectTag && selectTag.options;
  const stdTables = document.getElementsByClassName('alignedStandards');
  const intro = document.getElementsByClassName('alignedStandardsIntro')[0];
  let introNeeded = true;
  for (let i = 0; i < stdTables.length; i++) {
    const stdTable = stdTables[i];
    stdTable.style.display = 'none';
  }
  for (let i = 0; i < options.length; i++) {
    const opt = options[i];
    if (opt.selected) {
      const optStd = opt.value;
      for (let j = 0; j < stdTables.length; j++) {
        const stdTable = stdTables[j];
        if (stdTable.classList.contains(optStd)) {
          stdTable.style.display = 'block';
          introNeeded = false;
        }
      }
    }
  }
  intro.style.display = introNeeded ? 'block' : 'none';
}
</script>
<div class="paragraph">
<p>Relevant Standards<select class="standardsAlignmentSelect"  multiple onchange="showStandardsAlignment()" style="height: 150px"><option value="standards-OK">OK</option><option value="standards-K12CS">K12CS</option><option value="standards-CSTA">CSTA</option><option value="standards-NGSS">NGSS</option></select></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph alignedStandardsIntro">
<p><em>Select one or more standards from the menu on the left (⌘-click on Mac, Ctrl-click elsewhere).</em></p>
</div>
<div class="dlist alignedStandards standards-CSTA standards-hierarchical-table">
<div class="title">CSTA Standards</div>
<dl>
<dt class="hdlist1">2-AP-13</dt>
<dd>
<p>Decompose problems and subproblems into parts to facilitate the design, implementation, and review of programs</p>
</dd>
<dt class="hdlist1">2-AP-17</dt>
<dd>
<p>Systematically test and refine programs using a range of test cases</p>
</dd>
<dt class="hdlist1">3A-AP-17</dt>
<dd>
<p>Decompose problems into smaller components through systematic analysis, using constructs such as procedures, modules, and/or objects.</p>
</dd>
<dt class="hdlist1">3A-AP-18</dt>
<dd>
<p>Create artifacts by using procedures within a program, combinations of data and procedures, or independent but interrelated programs.</p>
</dd>
</dl>
</div>
<div class="dlist alignedStandards standards-K12CS standards-hierarchical-table">
<div class="title">K-12CS Standards</div>
<dl>
<dt class="hdlist1">6-8.Algorithms and Programming.Control</dt>
<dd>
<p>Programmers select and combine control structures, such as loops, event handlers, and conditionals, to create more complex program behavior.</p>
</dd>
<dt class="hdlist1">9-12.Algorithms and Programming.Control</dt>
<dd>
<p>Programmers consider tradeoffs related to implementation, readability, and program performance when selecting and combining control structures.</p>
</dd>
<dt class="hdlist1">9-12.Algorithms and Programming.Modularity</dt>
<dd>
<p>Complex programs are designed as systems of interacting modules, each with a specific role, coordinating for a common overall purpose. These modules can be procedures within a program; combinations of data and procedures; or independent, but interrelated, programs. Modules allow for better management of complex tasks.</p>
</dd>
<dt class="hdlist1">P3</dt>
<dd>
<p>Recognizing and Defining Computational Problems</p>
</dd>
</dl>
</div>
<div class="dlist alignedStandards standards-NGSS standards-hierarchical-table">
<div class="title">Next-Gen Science Standards</div>
<dl>
<dt class="hdlist1">HS-SEP4-1</dt>
<dd>
<p>Analyze data using tools, technologies, and/or models (e.g., computational, mathematical) in order to make valid and reliable scientific claims or determine an optimal design solution.</p>
</dd>
</dl>
</div>
<div class="dlist alignedStandards standards-OK standards-hierarchical-table">
<div class="title">Oklahoma Standards</div>
<dl>
<dt class="hdlist1">OK.L1.AP.M.01</dt>
<dd>
<p>Break down a solution into procedures using systematic analysis and design.</p>
</dd>
</dl>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Lesson Goals</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Students will be able to&#8230;&#8203;</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Use method chaining to write more sophisticated analyses using less code</p>
</li>
<li>
<p>Identify bugs introduced by chaining methods in the wrong order</p>
</li>
</ul>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Student-facing Lesson Goals</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="ulist">
<ul>
<li>
<p>Let&#8217;s practice writing functions and combining methods together.</p>
</li>
</ul>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Materials</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="ulist">
<ul>
<li>
<p>Lesson slides (<a href="https://docs.google.com/presentation/d/1YPbKXTTIaA8CuWr_KhG6vXLJ6u5L5IBM7cuFqMS5zy8/" target="_blank" rel="noopener">Google Slides</a>)</p>
</li>
<li>
<p>Computer for each student (or pair), with access to the internet</p>
</li>
<li>
<p><a href="../..//workbook/workbook.pdf">Student workbook</a>, and something to write with</p>
</li>
</ul>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Preparation</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="ulist">
<ul>
<li>
<p>Make sure all materials have been gathered</p>
</li>
<li>
<p>Decide how students will be grouped in pairs</p>
</li>
<li>
<p>All students should log into <a href="https://code.pyret.org" target="_blank" rel="noopener">CPO</a> and open the "Animals Starter File" they saved from the prior lesson. If they don&#8217;t have the file, they can <a href="https://code.pyret.org/editor#share=1ZupMVPWvVUOM0HCWyA7cRBghSLKxPWv1" target="_blank" rel="noopener">open a new one</a></p>
</li>
</ul>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Supplemental Resources</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Language Table</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><table class="tableblock frame-all grid-all stretch lang-features-table">
<colgroup>
<col style="width: 16.6666%;">
<col style="width: 66.6666%;">
<col style="width: 16.6668%;">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Types</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Functions</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Values</p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Number</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>num-sqrt, num-sqr, mean, median, modes</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>4, -1.2, 2/3</p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>String</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>string-repeat, string-contains</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>"hello", "91"</p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Boolean</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>==, &lt;, &lt;=, &gt;=, string-equal</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>true, false</p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Image</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>triangle, circle, star, rectangle, ellipse, square, text, overlay, bar-chart, pie-chart, bar-chart-summarized, pie-chart-summarized</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>🔵🔺🔶</p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>Table</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"><div class="paragraph">
<p>count, .row-n, order-by, .filter, .build-column</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div class="content"></div></td>
</tr>
</tbody>
</table></div></td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="sect1 lesson-section-1">
<h2 id="_design_recipe_practice_duration_25_minutes_"><span class="section-link"><a href="#_design_recipe_practice_duration_25_minutes_"><span class="section-link-symbol">&#128279;</span></a></span>Design Recipe Practice <span class="duration">25 minutes</span></h2>
<div class="sectionbody">
<div class="sect2 lesson-section-2">
<h3 id="_overview">Overview</h3>
<div class="paragraph">
<p>Students practice more of what they learned in the previous lesson, applying the Design Recipe to simple table functions that operate on rows of the Animals Dataset. The functions they create - in addition to the ones they&#8217;ve already made - set up the method-chaining activity.</p>
</div>
</div>
<div class="sect2 lesson-section-2">
<h3 id="_launch">Launch</h3>
<div class="paragraph">
<p>The Design Recipe is a powerful tool for solving problems by writing functions. It&#8217;s important for this to be like second nature, so let&#8217;s get some more practice using it!</p>
</div>
</div>
<div class="sect2 lesson-section-2">
<h3 id="_investigate">Investigate</h3>
<div class="paragraph lesson-instruction">
<p>Define the Compute functions on <a href="../../lessons/ds-method-chaining/pages/design-recipe-1.html" target="_blank" rel="noopener">The Design Recipe (Page 32)</a> and <a href="../../lessons/ds-method-chaining/pages/design-recipe-2.html" target="_blank" rel="noopener">The Design Recipe (Page 33)</a>.</p>
</div>
</div>
<div class="sect2 lesson-section-2">
<h3 id="_synthesize">Synthesize</h3>
<div class="paragraph">
<p>Did students find themselves getting faster at using the Design Recipe? Can students share any patterns they noticed, or shortcuts they used?</p>
</div>
</div>
</div>
</div>
<div class="sect1 lesson-section-1">
<h2 id="_chaining_methods_duration_25_minutes_"><span class="section-link"><a href="#_chaining_methods_duration_25_minutes_"><span class="section-link-symbol">&#128279;</span></a></span>Chaining Methods <span class="duration">25 minutes</span></h2>
<div class="sectionbody">
<div class="sect2 lesson-section-2">
<h3 id="_overview_2">Overview</h3>
<div class="paragraph">
<p>Students learn how to perform multiple table operations (sorting, filtering, building) in the same line of code.</p>
</div>
</div>
<div class="sect2 lesson-section-2">
<h3 id="_launch_2">Launch</h3>
<div class="paragraph">
<p>Now that we are doing more sophisticated analyses, we might find ourselves writing the following code:</p>
</div>
<div class="listingblock">
<div class="content">
<pre><tt class="pyret"># get a table with the nametags of all the fixed animals, ordered by species
fixed = animals-table.filter(is-fixed)
fixed-with-nametags = fixed.build-column("tag", nametag)
result = fixed-with-nametags.order-by("species", true)</tt></pre>
</div>
</div>
<div class="paragraph">
<p>That&#8217;s a lot of code, and it also requires us to come up with names for each intermediate step! Pyret allows table methods to be <em>chained together</em>, so that we can build, filter <em>and</em> order a Table in one shot. For example:</p>
</div>
<div class="listingblock">
<div class="content">
<pre><tt class="pyret"># get a table with the nametags of all the fixed animals, ordered by species
result = animals-table.build-column("label", nametag).filter(is-fixed).order-by("species", true)</tt></pre>
</div>
</div>
<div class="paragraph">
<p>This code takes the <code><tt class="pyret">animals-table</tt></code>, and builds a new column. According to our Contracts Page, <code><tt class="pyret">.build-column</tt></code> produces a new Table, and that’s the Table whose <code><tt class="pyret">.filter</tt></code> method we use. That method produces <em>yet another Table</em>, and we call that Table’s <code><tt class="pyret">order-by</tt></code> method. The Table that comes back from that is our final result.</p>
</div>
<table class="tableblock frame-all grid-none stripes-none stretch strategy-box">
<colgroup>
<col style="width: 100%;">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><span class="title">Teaching Tip</span></p>
<p class="tableblock">Use different color markers to draw <em>nested boxes</em> around each part of the expression, showing where each Table came from.</p></td>
</tr>
</tbody>
</table>
<div class="paragraph">
<p>It can be difficult to read code that has lots of method calls chained together, so we can add a line-break before each “<code><tt class="pyret">.</tt></code>” to make it more readable. Here’s the exact same code, written with each method on its own line:</p>
</div>
<div class="listingblock">
<div class="content">
<pre><tt class="pyret"># get a table with the nametags of all the fixed animals, order by species
animals-table
  .build-column("label", nametag)
  .filter(is-fixed)
  .order-by("species", true)</tt></pre>
</div>
</div>
<div class="paragraph lesson-point">
<p>Order matters: Build, Filter, Order.</p>
</div>
<div class="paragraph">
<p>Suppose we want to build a column and then use it to filter our table. If we use the methods in the wrong order (trying to filter by a column that doesn’t exist yet), we might wind up crashing the program. Even worse, the program might work, but produce results that are incorrect!</p>
</div>
</div>
<div class="sect2 lesson-section-2">
<h3 id="_investigate_2">Investigate</h3>
<div class="paragraph lesson-point">
<p>When chaining methods, it’s important to build first, then filter, and then order.</p>
</div>
<div class="paragraph">
<p>How well do you know your table methods? Complete <a href="../../lessons/ds-method-chaining/pages/chaining-methods.html" target="_blank" rel="noopener">Chaining Methods (Page 34)</a> and <a href="../../lessons/ds-method-chaining/pages/chaining-methods-order-matters.html" target="_blank" rel="noopener">Chaining Methods 2: Order Matters! (Page 35)</a> in your Student Workbook to find out.</p>
</div>
</div>
<div class="sect2 lesson-section-2">
<h3 id="_synthesize_2">Synthesize</h3>
<div class="paragraph">
<p>As our analysis gets more complex, method chaining is a great way to keep the code simple. But complex analysis also has more room for mistakes, so it’s critical to think carefully when we use it!</p>
</div>
<div class="openblock acknowledgment">
<div class="content">
<div class="paragraph">
<p>These materials were developed partly through support of the National Science Foundation,
(awards 1042210, 1535276, 1648684, and 1738598). <a href="https://www.creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener"><span class="image"><img src="../../../../lib/CCbadge.png" alt="CCbadge"></span></a>
Bootstrap:Data Science by Emmanuel Schanzer, Nancy Pfenning, Emma Youndtsmith, Jennifer Poole, Shriram Krishnamurthi, Joe Politz, Ben Lerner, Flannery Denny, and Dorai Sitaram with help from Eric Allatta and Joy Straub
is licensed under a
<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons 4.0 Unported License</a>.
Based on a work at <a href="https://www.bootstrapworld.org">www.BootstrapWorld.org</a>.
Permissions beyond the scope of this license may be available by contacting
<a href="mailto:schanzer@BootstrapWorld.org">schanzer@BootstrapWorld.org</a>.</p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footer-text">
Last updated 2020-08-19 20:34:23 -0400
</div>
</div>
</div>
</body>
</html>