
[.alignedStandardsIntro]
_Select one or more standards from the menu on the left (âŒ˜-click on Mac, Ctrl-click elsewhere)._


[.alignedStandards.standards-CSTA]
.CSTA Standards
[.standards-hierarchical-table]
2-AP-13:: Decompose problems and subproblems into parts to facilitate the design, implementation, and review of programs
2-AP-14:: Create procedures with parameters to organize code and make it easier to reuse.
2-AP-17:: Systematically test and refine programs using a range of test cases
2-AP-19:: Document programs in order to make them easier to follow, test, and debug.
3A-AP-17:: Decompose problems into smaller components through systematic analysis, using constructs such as procedures, modules, and/or objects.
3A-AP-18:: Create artifacts by using procedures within a program, combinations of data and procedures, or independent but interrelated programs.



[.alignedStandards.standards-K12CS]
.K-12CS Standards
[.standards-hierarchical-table]
6-8.Algorithms and Programming.Modularity:: Programs use procedures to organize code, hide implementation details, and make code easier to reuse. Procedures can be repurposed in new programs. Defining parameters for procedures can generalize behavior and increase reusability.
9-12.Algorithms and Programming.Modularity:: Complex programs are designed as systems of interacting modules, each with a specific role, coordinating for a common overall purpose. These modules can be procedures within a program; combinations of data and procedures; or independent, but interrelated, programs. Modules allow for better management of complex tasks.
P4:: Developing and Using Abstractions



[.alignedStandards.standards-NGSS]
.Next-Gen Science Standards
[.standards-hierarchical-table]
HS-SEP5-3:: Apply techniques of algebra and functions to represent and solve scientific and engineering problems.



[.alignedStandards.standards-OK]
.Oklahoma Standards
[.standards-hierarchical-table]
OK.L1.AP.M.01:: Break down a solution into procedures using systematic analysis and design.


