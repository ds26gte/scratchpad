[.LessonPlan]
[.pyret]
= Data Displays and Lookups


Students continue to practice making different kinds of data displays, this time focusing less on programming and more on using displays to answer questions. They also learn how to extract individual rows from a table, and columns from a row.


[.left-header.preamble,cols="20a,80a",stripes=none]
|===

| Prerequisites | link:{pathwayrootdir}lessons/pass:[ds-applying-functions]/index.shtml[Applying Functions]

| 
++++
<script>
function showStandardsAlignment() {
  const selectTag = document.getElementsByClassName('standardsAlignmentSelect')[0];
  const options = selectTag && selectTag.options;
  const stdTables = document.getElementsByClassName('alignedStandards');
  const intro = document.getElementsByClassName('alignedStandardsIntro')[0];
  let introNeeded = true;
  for (let i = 0; i < stdTables.length; i++) {
    const stdTable = stdTables[i];
    stdTable.style.display = 'none';
  }
  for (let i = 0; i < options.length; i++) {
    const opt = options[i];
    if (opt.selected) {
      const optStd = opt.value;
      for (let j = 0; j < stdTables.length; j++) {
        const stdTable = stdTables[j];
        if (stdTable.classList.contains(optStd)) {
          stdTable.style.display = 'block';
          introNeeded = false;
        }
      }
    }
  }
  intro.style.display = introNeeded ? 'block' : 'none';
}
</script>
++++

Relevant Standards%CURRICULUMselect% class="standardsAlignmentSelect"  multiple onchange="showStandardsAlignment()" style="height: 150px"%BEGINCURRICULUMselect%%CURRICULUMoption% value="standards-OK"%BEGINCURRICULUMoption%OK%ENDCURRICULUMoption%%CURRICULUMoption% value="standards-K12CS"%BEGINCURRICULUMoption%K12CS%ENDCURRICULUMoption%%CURRICULUMoption% value="standards-CSTA"%BEGINCURRICULUMoption%CSTA%ENDCURRICULUMoption%%CURRICULUMoption% value="standards-NGSS"%BEGINCURRICULUMoption%NGSS%ENDCURRICULUMoption%%CURRICULUMoption% value="standards-CC-Math"%BEGINCURRICULUMoption%CC-Math%ENDCURRICULUMoption%%ENDCURRICULUMselect%

|

include::./pathway-standards.asc[]

| Lesson Goals
| Students will be able to...

* Given a human-language request for a data display involving the entire Animals Dataset, break it down into parts and generate the display.
* Given a Table, use the `row-n` method to extract any Row from that table
* Given a Row, use the column lookups to extract the value of any column in the Row

| Student-facing Lesson Goals
|

* Let's practice making graphs and retrieving information from tables.

| Materials
|
* Lesson Slides (link:pass:[https://docs.google.com/presentation/d/1O3MdTLTDK5QPX_4eMHFAp3ar_KreA9ddvAWYIbgmeFo/][Google Slides, window="_blank"])
* Computer for each student (or pair), with access to the internet
* link:{pathwayrootdir}/workbook/workbook.pdf[Student workbook], and something to write with
* All students should log into link:pass:[https://code.pyret.org][CPO, window="_blank"] and open the "Animals Starter File" they saved from the prior lesson. If they don't have the file, they can link:pass:[https://code.pyret.org/editor#share=1ZupMVPWvVUOM0HCWyA7cRBghSLKxPWv1][open a new one, window="_blank"]

| Preparation
|
* Make sure all materials have been gathered
* Decide how students will be grouped in pairs

| Supplemental Resources
|

include::xtra/lang-prereq.asc[]
|===



include::./pathway-glossary.asc[]

[.lesson-section-1]
== Displaying Data %CURRICULUMspan% class="duration"%BEGINCURRICULUMspan%20 minutes%ENDCURRICULUMspan%

[.lesson-section-2]
=== Overview
Students get some more practice applying the plotting functions and working with Contracts, and begin to shift the focus from _programming_ to _data visualization_. This activity stresses a hard programming skill (reading Contracts) with formal reading comprehension (identifying key portions of the sentence).

[.lesson-section-2]
=== Launch
The Contracts page in the back of students' workbooks contains %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%contracts%ENDCURRICULUMspan% for many plotting functions. 

Suppose we wanted to generate a display showing the ratio of fixed to un-fixed animals from the shelter? How do we go from a simple sentence to working code that makes a data display?

[.lesson-point]
To make a data display, we ask "Which Rows?", "Which Column(s)?", and "What Display?"

%CURRICULUMspan% class="right"%BEGINCURRICULUMspan%image:{pathwayrootdir}lessons/ds-displays-and-lookups/images/AnalysisPipeline.png["", ]link:images/AnalysisPipeline.png[%CURRICULUMspan% class="big"%BEGINCURRICULUMspan%&#x1f5bc;%ENDCURRICULUMspan%Show image,role="gdrive-only"]%ENDCURRICULUMspan%

. We start by asking *which rows* we're talking about. In this case, it's all the animals from the shelter.
. We also need to know *which column(s)* - or "which variable(s)" - we are displaying. In this case, it's the `fixed` column.
. Finally, we need to know *which display* we are using. Is it a histogram? Bar chart? Scatter plots are essential for displaying relationships _between_ columns, but the other displays only deal with one column. Some displays work for %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%categorical data%ENDCURRICULUMspan%, and others are for %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%quantitative data%ENDCURRICULUMspan%.

Once we can answer these questions, all we need to do is find the Contract for that display and fill in the Domain!

To display the categorical data, we can choose between pie and bar charts. Which one of these two is best, and why?
%CURRICULUMspan% class="clear"%BEGINCURRICULUMspan%%ENDCURRICULUMspan%

[.lesson-section-2]
=== Investigate
Do you know what kind of data is used for each display?

[.lesson-instruction]
Turn to link:{pathwayrootdir}pass:[lessons/ds-displays-and-lookups/pages/type-v-display.html][What Display Goes with Which Data? (Page 18), window="_blank"], and see if you identify what kind of data each display needs!

Let's get some practice going from questions to code, making visualizations.

[.lesson-instruction]
Turn to link:{pathwayrootdir}pass:[lessons/ds-displays-and-lookups/pages/data-displays.html][Data Displays (Page 19), window="_blank"], and see if you can fill in these three parts for a number of data display requests. When you're finished, try to make the display in Pyret using the appropriate function.

[.lesson-section-2]
=== Synthesize
Debrief the activity with students. 

Optional: As an extension, have students break into teams and come up with additional Data Display challenges, then race to see which team can complete the other team's challenges first!

[.lesson-section-1]
== Row and Column Lookups %CURRICULUMspan% class="duration"%BEGINCURRICULUMspan%30 minutes%ENDCURRICULUMspan%

[.lesson-section-2]
=== Overview
Students learn how to access individual rows from a table in Pyret, and how to access a particular column from those rows.

[.lesson-section-2]
=== Launch
Have students open their saved Animals Starter File (or make a link:pass:[https://code.pyret.org/editor#share=1ZupMVPWvVUOM0HCWyA7cRBghSLKxPWv1][new copy, window="_blank"]), and click “Run”.

Tables have special functions associated with them, called %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%Methods%ENDCURRICULUMspan%, which allow us to do all sorts of things with those tables. For example, we can get the first data row in a table by using the `.row-n` method: `animals-table.row-n(0)`

[.lesson-point]
Don't forget: data rows start at index _zero_!

[.lesson-instruction]
For practice, in the Interactions Area, use the `row-n` method to get the second and third data rows.

What is the Domain of .row-n? What is the Range? Find the contract for this method in your contracts table. A table %CURRICULUMspan% class="vocab"%BEGINCURRICULUMspan%method%ENDCURRICULUMspan% is a special kind of function which always operates on a specific table. In our example, we always use .row-n with the animals table, so the number we pass in is always used to grab a particular row from animals-table.

Pyret also has a way for us to get at individual columns of a Row, by using a Row Accessor. Row accessors start with a Row value, followed by square brackets and the name of the column where the value can be found. Here are three examples that use row accessors to get at different columns from the first row in the animals-table:

  animals-table.row-n(0)["name"]
  animals-table.row-n(0)["age"]
  animals-table.row-n(0)["fixed"]

[.lesson-section-2]
=== Investigate
[.lesson-instruction]
- How would you get the `weeks` column out of the _second_ row? The third?
- Complete the exercises on link:{pathwayrootdir}pass:[lessons/ds-displays-and-lookups/pages/lookup-questions.html][Lookup Questions (Page 20), window="_blank"].

We can use the `row-n` method to define entire _animal rows_ as values. Type the following lines of code into the Definitions Area and click “Run”:

  animalA = animals-table.row-n(1)
  animalB = animals-table.row-n(16)

Flip back to page 2 of your workbook and look at The Animals Dataset. Which row is animalA? Label it in the margin next to the dataset. Which row is animalB?  Label it in the margin next to the dataset.

Now turn back to your screen. 
What happens when you evaluate `animalA` in the Interactions Area?

[.lesson-instruction]
- Define _at least_ two additional values to be animals from the `animals-table`, called `animalC` and `animalD`.


[.lesson-section-2]
=== Synthesize
Have students share their answers, and see if there are any common questions that arise.

[.lesson-section-1]
== Additional Exercises:
-  link:{pathwayrootdir}pass:[lessons/ds-displays-and-lookups/pages/more-practice-w-lookups.html][More Practice with Lookups, window="_blank"]

[.acknowledgment]
--
These materials were developed partly through support of the National Science Foundation, 
(awards 1042210, 1535276, 1648684, and 1738598). link:https://www.creativecommons.org/licenses/by-nc-nd/4.0/[image:{pathwayrootdir}../../lib/CCbadge.png[], window="_blank"]
Bootstrap:Data Science by Emmanuel Schanzer, Nancy Pfenning, Emma Youndtsmith, Jennifer Poole, Shriram Krishnamurthi, Joe Politz, Ben Lerner, Flannery Denny, and Dorai Sitaram with help from Eric Allatta and Joy Straub
is licensed under a
https://creativecommons.org/licenses/by-nc-nd/4.0/[Creative Commons 4.0 Unported License].
Based on a work at https://www.bootstrapworld.org[www.BootstrapWorld.org].
Permissions beyond the scope of this license may be available by contacting
mailto:schanzer@BootstrapWorld.org[schanzer@BootstrapWorld.org]. 
--
